

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Jun 09 10:26:13 2022

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.31
    40                           ; Generated 13/10/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F877A Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  018C                     	;# 
   193  018D                     	;# 
   194  0000                     	;# 
   195  0001                     	;# 
   196  0002                     	;# 
   197  0003                     	;# 
   198  0004                     	;# 
   199  0005                     	;# 
   200  0006                     	;# 
   201  0007                     	;# 
   202  0008                     	;# 
   203  0009                     	;# 
   204  000A                     	;# 
   205  000B                     	;# 
   206  000C                     	;# 
   207  000D                     	;# 
   208  000E                     	;# 
   209  000E                     	;# 
   210  000F                     	;# 
   211  0010                     	;# 
   212  0011                     	;# 
   213  0012                     	;# 
   214  0013                     	;# 
   215  0014                     	;# 
   216  0015                     	;# 
   217  0015                     	;# 
   218  0016                     	;# 
   219  0017                     	;# 
   220  0018                     	;# 
   221  0019                     	;# 
   222  001A                     	;# 
   223  001B                     	;# 
   224  001B                     	;# 
   225  001C                     	;# 
   226  001D                     	;# 
   227  001E                     	;# 
   228  001F                     	;# 
   229  0081                     	;# 
   230  0085                     	;# 
   231  0086                     	;# 
   232  0087                     	;# 
   233  0088                     	;# 
   234  0089                     	;# 
   235  008C                     	;# 
   236  008D                     	;# 
   237  008E                     	;# 
   238  0091                     	;# 
   239  0092                     	;# 
   240  0093                     	;# 
   241  0094                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  010C                     	;# 
   249  010D                     	;# 
   250  010E                     	;# 
   251  010F                     	;# 
   252  018C                     	;# 
   253  018D                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  000D                     	;# 
   268  000E                     	;# 
   269  000E                     	;# 
   270  000F                     	;# 
   271  0010                     	;# 
   272  0011                     	;# 
   273  0012                     	;# 
   274  0013                     	;# 
   275  0014                     	;# 
   276  0015                     	;# 
   277  0015                     	;# 
   278  0016                     	;# 
   279  0017                     	;# 
   280  0018                     	;# 
   281  0019                     	;# 
   282  001A                     	;# 
   283  001B                     	;# 
   284  001B                     	;# 
   285  001C                     	;# 
   286  001D                     	;# 
   287  001E                     	;# 
   288  001F                     	;# 
   289  0081                     	;# 
   290  0085                     	;# 
   291  0086                     	;# 
   292  0087                     	;# 
   293  0088                     	;# 
   294  0089                     	;# 
   295  008C                     	;# 
   296  008D                     	;# 
   297  008E                     	;# 
   298  0091                     	;# 
   299  0092                     	;# 
   300  0093                     	;# 
   301  0094                     	;# 
   302  0098                     	;# 
   303  0099                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  010C                     	;# 
   309  010D                     	;# 
   310  010E                     	;# 
   311  010F                     	;# 
   312  018C                     	;# 
   313  018D                     	;# 
   314  0000                     	;# 
   315  0001                     	;# 
   316  0002                     	;# 
   317  0003                     	;# 
   318  0004                     	;# 
   319  0005                     	;# 
   320  0006                     	;# 
   321  0007                     	;# 
   322  0008                     	;# 
   323  0009                     	;# 
   324  000A                     	;# 
   325  000B                     	;# 
   326  000C                     	;# 
   327  000D                     	;# 
   328  000E                     	;# 
   329  000E                     	;# 
   330  000F                     	;# 
   331  0010                     	;# 
   332  0011                     	;# 
   333  0012                     	;# 
   334  0013                     	;# 
   335  0014                     	;# 
   336  0015                     	;# 
   337  0015                     	;# 
   338  0016                     	;# 
   339  0017                     	;# 
   340  0018                     	;# 
   341  0019                     	;# 
   342  001A                     	;# 
   343  001B                     	;# 
   344  001B                     	;# 
   345  001C                     	;# 
   346  001D                     	;# 
   347  001E                     	;# 
   348  001F                     	;# 
   349  0081                     	;# 
   350  0085                     	;# 
   351  0086                     	;# 
   352  0087                     	;# 
   353  0088                     	;# 
   354  0089                     	;# 
   355  008C                     	;# 
   356  008D                     	;# 
   357  008E                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009C                     	;# 
   365  009D                     	;# 
   366  009E                     	;# 
   367  009F                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374                           
   375                           	psect	idataBANK0
   376  07FF                     __pidataBANK0:
   377                           
   378                           ;initializer for _start_once
   379  07FF  3401               	retlw	1
   380  000C                     _PIR1bits	set	12
   381  001A                     _RCREG	set	26
   382  000B                     _INTCONbits	set	11
   383  0018                     _RCSTAbits	set	24
   384  0005                     _PORTA	set	5
   385  0009                     _PORTEbits	set	9
   386  0065                     _RCIF	set	101
   387  003A                     _RC2	set	58
   388  0038                     _RC0	set	56
   389  0037                     _RB7	set	55
   390  0036                     _RB6	set	54
   391  0035                     _RB5	set	53
   392  0034                     _RB4	set	52
   393  0048                     _RE0	set	72
   394  0031                     _RB1	set	49
   395  0030                     _RB0	set	48
   396  002D                     _RA5	set	45
   397  002C                     _RA4	set	44
   398  003B                     _RC3	set	59
   399  0040                     _RD0	set	64
   400  0028                     _RA0	set	40
   401  008C                     _PIE1bits	set	140
   402  0099                     _SPBRG	set	153
   403  0098                     _TXSTAbits	set	152
   404  0086                     _TRISB	set	134
   405  0086                     _TRISBbits	set	134
   406  0087                     _TRISCbits	set	135
   407  0088                     _TRISDbits	set	136
   408  0089                     _TRISEbits	set	137
   409  009F                     _ADCON1	set	159
   410  0085                     _TRISAbits	set	133
   411                           
   412                           	psect	strings
   413  02E3                     __pstrings:
   414  02E3                     stringtab:
   415  02E3                     __stringtab:
   416                           
   417                           ;	String table - string pointers are 2 bytes each
   418  02E3  1BFF               	btfsc	btemp+1,7
   419  02E4  2AED               	ljmp	stringcode
   420  02E5  1383               	bcf	3,7
   421  02E6  187F               	btfsc	btemp+1,0
   422  02E7  1783               	bsf	3,7
   423  02E8  0800               	movf	0,w
   424  02E9  0A84               	incf	4,f
   425  02EA  1903               	skipnz
   426  02EB  0AFF               	incf	btemp+1,f
   427  02EC  0008               	return
   428  02ED                     stringcode:
   429  02ED  087F               	movf	btemp+1,w
   430  02EE  397F               	andlw	127
   431  02EF  008A               	movwf	10
   432  02F0  0804               	movf	4,w
   433  02F1  0A84               	incf	4,f
   434  02F2  1903               	skipnz
   435  02F3  0AFF               	incf	btemp+1,f
   436  02F4  0082               	movwf	2
   437  02F5                     __stringbase:
   438  02F5                     __end_of__stringtab:
   439                           
   440                           	psect	stringtext
   441  0300                     __pstringtext:
   442  0300                     STR_15:
   443  0300  3420               	retlw	32	;' '
   444  0301  3463               	retlw	99	;'c'
   445  0302  346F               	retlw	111	;'o'
   446  0303  346E               	retlw	110	;'n'
   447  0304  346E               	retlw	110	;'n'
   448  0305  3465               	retlw	101	;'e'
   449  0306  3463               	retlw	99	;'c'
   450  0307  3474               	retlw	116	;'t'
   451  0308  3420               	retlw	32	;' '
   452  0309  3479               	retlw	121	;'y'
   453  030A  346F               	retlw	111	;'o'
   454  030B  3475               	retlw	117	;'u'
   455  030C  3472               	retlw	114	;'r'
   456  030D  3420               	retlw	32	;' '
   457  030E  3464               	retlw	100	;'d'
   458  030F  3465               	retlw	101	;'e'
   459  0310  3476               	retlw	118	;'v'
   460  0311  3469               	retlw	105	;'i'
   461  0312  3463               	retlw	99	;'c'
   462  0313  3465               	retlw	101	;'e'
   463  0314  3420               	retlw	32	;' '
   464  0315  3475               	retlw	117	;'u'
   465  0316  3473               	retlw	115	;'s'
   466  0317  3469               	retlw	105	;'i'
   467  0318  346E               	retlw	110	;'n'
   468  0319  3467               	retlw	103	;'g'
   469  031A  3420               	retlw	32	;' '
   470  031B  3462               	retlw	98	;'b'
   471  031C  346C               	retlw	108	;'l'
   472  031D  3475               	retlw	117	;'u'
   473  031E  3465               	retlw	101	;'e'
   474  031F  3474               	retlw	116	;'t'
   475  0320  346F               	retlw	111	;'o'
   476  0321  346F               	retlw	111	;'o'
   477  0322  3474               	retlw	116	;'t'
   478  0323  3468               	retlw	104	;'h'
   479  0324  3420               	retlw	32	;' '
   480  0325  3400               	retlw	0
   481  0326                     STR_16:
   482  0326  3420               	retlw	32	;' '
   483  0327  3474               	retlw	116	;'t'
   484  0328  346F               	retlw	111	;'o'
   485  0329  3420               	retlw	32	;' '
   486  032A  3468               	retlw	104	;'h'
   487  032B  3463               	retlw	99	;'c'
   488  032C  3430               	retlw	48	;'0'
   489  032D  3435               	retlw	53	;'5'
   490  032E  3420               	retlw	32	;' '
   491  032F  3461               	retlw	97	;'a'
   492  0330  346E               	retlw	110	;'n'
   493  0331  3464               	retlw	100	;'d'
   494  0332  3420               	retlw	32	;' '
   495  0333  3465               	retlw	101	;'e'
   496  0334  346E               	retlw	110	;'n'
   497  0335  346A               	retlw	106	;'j'
   498  0336  346F               	retlw	111	;'o'
   499  0337  3479               	retlw	121	;'y'
   500  0338  3420               	retlw	32	;' '
   501  0339  3463               	retlw	99	;'c'
   502  033A  346F               	retlw	111	;'o'
   503  033B  346E               	retlw	110	;'n'
   504  033C  3474               	retlw	116	;'t'
   505  033D  3472               	retlw	114	;'r'
   506  033E  346F               	retlw	111	;'o'
   507  033F  346C               	retlw	108	;'l'
   508  0340  346C               	retlw	108	;'l'
   509  0341  3469               	retlw	105	;'i'
   510  0342  346E               	retlw	110	;'n'
   511  0343  3467               	retlw	103	;'g'
   512  0344  342E               	retlw	46	;'.'
   513  0345  342E               	retlw	46	;'.'
   514  0346  342E               	retlw	46	;'.'
   515  0347  3400               	retlw	0
   516  0348                     STR_12:
   517  0348  3420               	retlw	32	;' '
   518  0349  3420               	retlw	32	;' '
   519  034A  3420               	retlw	32	;' '
   520  034B  3420               	retlw	32	;' '
   521  034C  3420               	retlw	32	;' '
   522  034D  3420               	retlw	32	;' '
   523  034E  3420               	retlw	32	;' '
   524  034F  3420               	retlw	32	;' '
   525  0350  3420               	retlw	32	;' '
   526  0351  3420               	retlw	32	;' '
   527  0352  3420               	retlw	32	;' '
   528  0353  3420               	retlw	32	;' '
   529  0354  3420               	retlw	32	;' '
   530  0355  3420               	retlw	32	;' '
   531  0356  3420               	retlw	32	;' '
   532  0357  3420               	retlw	32	;' '
   533  0358  3420               	retlw	32	;' '
   534  0359  3420               	retlw	32	;' '
   535  035A  3420               	retlw	32	;' '
   536  035B  3420               	retlw	32	;' '
   537  035C  3420               	retlw	32	;' '
   538  035D  3420               	retlw	32	;' '
   539  035E  3420               	retlw	32	;' '
   540  035F  3400               	retlw	0
   541  0360                     STR_14:
   542  0360  345F               	retlw	95	;'_'
   543  0361  345F               	retlw	95	;'_'
   544  0362  3449               	retlw	73	;'I'
   545  0363  344E               	retlw	78	;'N'
   546  0364  3453               	retlw	83	;'S'
   547  0365  3454               	retlw	84	;'T'
   548  0366  3452               	retlw	82	;'R'
   549  0367  3455               	retlw	85	;'U'
   550  0368  3443               	retlw	67	;'C'
   551  0369  3454               	retlw	84	;'T'
   552  036A  3449               	retlw	73	;'I'
   553  036B  344F               	retlw	79	;'O'
   554  036C  344E               	retlw	78	;'N'
   555  036D  3453               	retlw	83	;'S'
   556  036E  345F               	retlw	95	;'_'
   557  036F  345F               	retlw	95	;'_'
   558  0370  3420               	retlw	32	;' '
   559  0371  3420               	retlw	32	;' '
   560  0372  3400               	retlw	0
   561  0373                     STR_9:
   562  0373  3459               	retlw	89	;'Y'
   563  0374  3445               	retlw	69	;'E'
   564  0375  344C               	retlw	76	;'L'
   565  0376  344C               	retlw	76	;'L'
   566  0377  344F               	retlw	79	;'O'
   567  0378  3457               	retlw	87	;'W'
   568  0379  3420               	retlw	32	;' '
   569  037A  344C               	retlw	76	;'L'
   570  037B  3445               	retlw	69	;'E'
   571  037C  3444               	retlw	68	;'D'
   572  037D  3420               	retlw	32	;' '
   573  037E  344F               	retlw	79	;'O'
   574  037F  3446               	retlw	70	;'F'
   575  0380  3446               	retlw	70	;'F'
   576  0381  342E               	retlw	46	;'.'
   577  0382  342E               	retlw	46	;'.'
   578  0383  342E               	retlw	46	;'.'
   579  0384  3400               	retlw	0
   580  0385                     STR_10:
   581  0385  3457               	retlw	87	;'W'
   582  0386  3448               	retlw	72	;'H'
   583  0387  3449               	retlw	73	;'I'
   584  0388  3454               	retlw	84	;'T'
   585  0389  3445               	retlw	69	;'E'
   586  038A  3420               	retlw	32	;' '
   587  038B  344C               	retlw	76	;'L'
   588  038C  3445               	retlw	69	;'E'
   589  038D  3444               	retlw	68	;'D'
   590  038E  3420               	retlw	32	;' '
   591  038F  344F               	retlw	79	;'O'
   592  0390  3446               	retlw	70	;'F'
   593  0391  3446               	retlw	70	;'F'
   594  0392  342E               	retlw	46	;'.'
   595  0393  342E               	retlw	46	;'.'
   596  0394  342E               	retlw	46	;'.'
   597  0395  3400               	retlw	0
   598  0396                     STR_8:
   599  0396  3447               	retlw	71	;'G'
   600  0397  3452               	retlw	82	;'R'
   601  0398  3445               	retlw	69	;'E'
   602  0399  3445               	retlw	69	;'E'
   603  039A  344E               	retlw	78	;'N'
   604  039B  3420               	retlw	32	;' '
   605  039C  344C               	retlw	76	;'L'
   606  039D  3445               	retlw	69	;'E'
   607  039E  3444               	retlw	68	;'D'
   608  039F  3420               	retlw	32	;' '
   609  03A0  344F               	retlw	79	;'O'
   610  03A1  3446               	retlw	70	;'F'
   611  03A2  3446               	retlw	70	;'F'
   612  03A3  342E               	retlw	46	;'.'
   613  03A4  342E               	retlw	46	;'.'
   614  03A5  342E               	retlw	46	;'.'
   615  03A6  3400               	retlw	0
   616  03A7                     STR_4:
   617  03A7  3459               	retlw	89	;'Y'
   618  03A8  3445               	retlw	69	;'E'
   619  03A9  344C               	retlw	76	;'L'
   620  03AA  344C               	retlw	76	;'L'
   621  03AB  344F               	retlw	79	;'O'
   622  03AC  3457               	retlw	87	;'W'
   623  03AD  3420               	retlw	32	;' '
   624  03AE  344C               	retlw	76	;'L'
   625  03AF  3445               	retlw	69	;'E'
   626  03B0  3444               	retlw	68	;'D'
   627  03B1  3420               	retlw	32	;' '
   628  03B2  344F               	retlw	79	;'O'
   629  03B3  344E               	retlw	78	;'N'
   630  03B4  342E               	retlw	46	;'.'
   631  03B5  342E               	retlw	46	;'.'
   632  03B6  342E               	retlw	46	;'.'
   633  03B7  3400               	retlw	0
   634  03B8                     STR_6:
   635  03B8  3442               	retlw	66	;'B'
   636  03B9  344C               	retlw	76	;'L'
   637  03BA  3455               	retlw	85	;'U'
   638  03BB  3445               	retlw	69	;'E'
   639  03BC  3420               	retlw	32	;' '
   640  03BD  344C               	retlw	76	;'L'
   641  03BE  3445               	retlw	69	;'E'
   642  03BF  3444               	retlw	68	;'D'
   643  03C0  3420               	retlw	32	;' '
   644  03C1  344F               	retlw	79	;'O'
   645  03C2  3446               	retlw	70	;'F'
   646  03C3  3446               	retlw	70	;'F'
   647  03C4  342E               	retlw	46	;'.'
   648  03C5  342E               	retlw	46	;'.'
   649  03C6  342E               	retlw	46	;'.'
   650  03C7  3400               	retlw	0
   651  03C8                     STR_5:
   652  03C8  3457               	retlw	87	;'W'
   653  03C9  3448               	retlw	72	;'H'
   654  03CA  3449               	retlw	73	;'I'
   655  03CB  3454               	retlw	84	;'T'
   656  03CC  3445               	retlw	69	;'E'
   657  03CD  3420               	retlw	32	;' '
   658  03CE  344C               	retlw	76	;'L'
   659  03CF  3445               	retlw	69	;'E'
   660  03D0  3444               	retlw	68	;'D'
   661  03D1  3420               	retlw	32	;' '
   662  03D2  344F               	retlw	79	;'O'
   663  03D3  344E               	retlw	78	;'N'
   664  03D4  342E               	retlw	46	;'.'
   665  03D5  342E               	retlw	46	;'.'
   666  03D6  342E               	retlw	46	;'.'
   667  03D7  3400               	retlw	0
   668  03D8                     STR_3:
   669  03D8  3447               	retlw	71	;'G'
   670  03D9  3452               	retlw	82	;'R'
   671  03DA  3445               	retlw	69	;'E'
   672  03DB  3445               	retlw	69	;'E'
   673  03DC  344E               	retlw	78	;'N'
   674  03DD  3420               	retlw	32	;' '
   675  03DE  344C               	retlw	76	;'L'
   676  03DF  3445               	retlw	69	;'E'
   677  03E0  3444               	retlw	68	;'D'
   678  03E1  3420               	retlw	32	;' '
   679  03E2  344F               	retlw	79	;'O'
   680  03E3  344E               	retlw	78	;'N'
   681  03E4  342E               	retlw	46	;'.'
   682  03E5  342E               	retlw	46	;'.'
   683  03E6  342E               	retlw	46	;'.'
   684  03E7  3400               	retlw	0
   685  03E8                     STR_7:
   686  03E8  3452               	retlw	82	;'R'
   687  03E9  3445               	retlw	69	;'E'
   688  03EA  3444               	retlw	68	;'D'
   689  03EB  3420               	retlw	32	;' '
   690  03EC  344C               	retlw	76	;'L'
   691  03ED  3445               	retlw	69	;'E'
   692  03EE  3444               	retlw	68	;'D'
   693  03EF  3420               	retlw	32	;' '
   694  03F0  344F               	retlw	79	;'O'
   695  03F1  3446               	retlw	70	;'F'
   696  03F2  3446               	retlw	70	;'F'
   697  03F3  342E               	retlw	46	;'.'
   698  03F4  342E               	retlw	46	;'.'
   699  03F5  342E               	retlw	46	;'.'
   700  03F6  3400               	retlw	0
   701  03F7                     STR_1:
   702  03F7  3442               	retlw	66	;'B'
   703  03F8  344C               	retlw	76	;'L'
   704  03F9  3455               	retlw	85	;'U'
   705  03FA  3445               	retlw	69	;'E'
   706  03FB  3420               	retlw	32	;' '
   707  03FC  344C               	retlw	76	;'L'
   708  03FD  3445               	retlw	69	;'E'
   709  03FE  3444               	retlw	68	;'D'
   710  03FF  3420               	retlw	32	;' '
   711  0400  344F               	retlw	79	;'O'
   712  0401  344E               	retlw	78	;'N'
   713  0402  342E               	retlw	46	;'.'
   714  0403  342E               	retlw	46	;'.'
   715  0404  342E               	retlw	46	;'.'
   716  0405  3400               	retlw	0
   717  0406                     STR_2:
   718  0406  3452               	retlw	82	;'R'
   719  0407  3445               	retlw	69	;'E'
   720  0408  3444               	retlw	68	;'D'
   721  0409  3420               	retlw	32	;' '
   722  040A  344C               	retlw	76	;'L'
   723  040B  3445               	retlw	69	;'E'
   724  040C  3444               	retlw	68	;'D'
   725  040D  3420               	retlw	32	;' '
   726  040E  344F               	retlw	79	;'O'
   727  040F  344E               	retlw	78	;'N'
   728  0410  342E               	retlw	46	;'.'
   729  0411  342E               	retlw	46	;'.'
   730  0412  342E               	retlw	46	;'.'
   731  0413  3400               	retlw	0
   732  0414                     STR_11:
   733  0414  3420               	retlw	32	;' '
   734  0415  3452               	retlw	82	;'R'
   735  0416  3465               	retlw	101	;'e'
   736  0417  3461               	retlw	97	;'a'
   737  0418  3464               	retlw	100	;'d'
   738  0419  3479               	retlw	121	;'y'
   739  041A  3420               	retlw	32	;' '
   740  041B  3400               	retlw	0
   741  0414                     
   742                           	psect	cinit
   743  000F                     start_initialization:	
   744                           ; #config settings
   745                           
   746  000F                     __initialization:
   747                           
   748                           ; Initialize objects allocated to BANK0
   749  000F  120A  118A  27FF   	fcall	__pidataBANK0	;fetch initializer
   750  0012  00B0               	movwf	__pdataBANK0& (0+127)
   751                           
   752                           ; Clear objects allocated to COMMON
   753  0013  01FA               	clrf	__pbssCOMMON& (0+127)
   754  0014                     end_of_initialization:	
   755                           ;End of C runtime variable initialization code
   756                           
   757  0014                     __end_of__initialization:
   758  0014  0183               	clrf	3
   759  0015  120A  118A  2A69   	ljmp	_main	;jump to C main() function
   760                           
   761                           	psect	bssCOMMON
   762  007A                     __pbssCOMMON:
   763  007A                     _RecievedData:
   764  007A                     	ds	1
   765                           
   766                           	psect	dataBANK0
   767  0030                     __pdataBANK0:
   768  0030                     _start_once:
   769  0030                     	ds	1
   770                           
   771                           	psect	cstackCOMMON
   772  0070                     __pcstackCOMMON:
   773  0070                     ?_LCD_Init:
   774  0070                     ?_UART_RX_Init:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_splash_screen:	
   778                           ; 1 bytes @ 0x0
   779                           
   780  0070                     ?_UART_Read:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_led_on:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_start_led_actions:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ?_screen_saver:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_instruction_screen:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_Is_Data_Recieved:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ??_Is_Data_Recieved:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_new_led:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_LCD_Clear:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_led_testing:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_start_led_actions2:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_led_off:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_LCD_SR:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ?_LCD_SL:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_LCD_DATA:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_LCD_CMD:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_main:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_ISR:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_LCD_Write_Char:	
   835                           ; 1 bytes @ 0x0
   836                           
   837                           
   838                           ; 1 bytes @ 0x0
   839  0070                     	ds	1
   840  0071                     ??_ISR:
   841                           
   842                           ; 1 bytes @ 0x1
   843  0071                     	ds	2
   844  0073                     ??_UART_RX_Init:
   845  0073                     ??_UART_Read:	
   846                           ; 1 bytes @ 0x3
   847                           
   848  0073                     ??_led_on:	
   849                           ; 1 bytes @ 0x3
   850                           
   851  0073                     ??_new_led:	
   852                           ; 1 bytes @ 0x3
   853                           
   854  0073                     ??_led_off:	
   855                           ; 1 bytes @ 0x3
   856                           
   857  0073                     ??_LCD_DATA:	
   858                           ; 1 bytes @ 0x3
   859                           
   860  0073                     new_led@pin_number:	
   861                           ; 1 bytes @ 0x3
   862                           
   863  0073                     led_off@pin_number:	
   864                           ; 1 bytes @ 0x3
   865                           
   866  0073                     LCD_DATA@Data:	
   867                           ; 1 bytes @ 0x3
   868                           
   869                           
   870                           ; 1 bytes @ 0x3
   871  0073                     	ds	1
   872  0074                     ??_LCD_CMD:
   873  0074                     ??_LCD_Write_Char:	
   874                           ; 1 bytes @ 0x4
   875                           
   876                           
   877                           ; 1 bytes @ 0x4
   878  0074                     	ds	1
   879  0075                     led_on@pin_number:
   880  0075                     LCD_CMD@CMD:	
   881                           ; 1 bytes @ 0x5
   882                           
   883  0075                     LCD_Write_Char@Low4:	
   884                           ; 1 bytes @ 0x5
   885                           
   886                           
   887                           ; 1 bytes @ 0x5
   888  0075                     	ds	1
   889  0076                     ??_LCD_Init:
   890  0076                     ?_LCD_Set_Cursor:	
   891                           ; 1 bytes @ 0x6
   892                           
   893  0076                     ??_LCD_Clear:	
   894                           ; 1 bytes @ 0x6
   895                           
   896  0076                     ??_led_testing:	
   897                           ; 1 bytes @ 0x6
   898                           
   899  0076                     ??_start_led_actions2:	
   900                           ; 1 bytes @ 0x6
   901                           
   902  0076                     ??_LCD_SR:	
   903                           ; 1 bytes @ 0x6
   904                           
   905  0076                     ??_LCD_SL:	
   906                           ; 1 bytes @ 0x6
   907                           
   908  0076                     LCD_Set_Cursor@c:	
   909                           ; 1 bytes @ 0x6
   910                           
   911  0076                     LCD_Write_Char@High4:	
   912                           ; 1 bytes @ 0x6
   913                           
   914                           
   915                           ; 1 bytes @ 0x6
   916  0076                     	ds	1
   917  0077                     ??_LCD_Set_Cursor:
   918  0077                     LCD_Write_Char@Data:	
   919                           ; 1 bytes @ 0x7
   920                           
   921                           
   922                           ; 1 bytes @ 0x7
   923  0077                     	ds	1
   924  0078                     ?_LCD_Write_String:
   925  0078                     LCD_Write_String@str:	
   926                           ; 1 bytes @ 0x8
   927                           
   928                           
   929                           ; 2 bytes @ 0x8
   930  0078                     	ds	2
   931  007A                     ??_main:
   932                           
   933                           	psect	cstackBANK0
   934  0020                     __pcstackBANK0:	
   935                           ; 1 bytes @ 0xA
   936                           
   937  0020                     ??_splash_screen:
   938  0020                     ??_LCD_Write_String:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0020                     LCD_Set_Cursor@r:	
   942                           ; 1 bytes @ 0x0
   943                           
   944                           
   945                           ; 1 bytes @ 0x0
   946  0020                     	ds	1
   947  0021                     LCD_Set_Cursor@Low4:
   948                           
   949                           ; 1 bytes @ 0x1
   950  0021                     	ds	1
   951  0022                     LCD_Set_Cursor@High4:
   952                           
   953                           ; 1 bytes @ 0x2
   954  0022                     	ds	1
   955  0023                     LCD_Set_Cursor@Temp:
   956  0023                     LCD_Write_String@i:	
   957                           ; 1 bytes @ 0x3
   958                           
   959                           
   960                           ; 2 bytes @ 0x3
   961  0023                     	ds	2
   962  0025                     ??_start_led_actions:
   963  0025                     ??_screen_saver:	
   964                           ; 1 bytes @ 0x5
   965                           
   966  0025                     ??_instruction_screen:	
   967                           ; 1 bytes @ 0x5
   968                           
   969                           
   970                           ; 1 bytes @ 0x5
   971  0025                     	ds	3
   972  0028                     screen_saver@i:
   973  0028                     instruction_screen@i:	
   974                           ; 2 bytes @ 0x8
   975                           
   976                           
   977                           ; 2 bytes @ 0x8
   978  0028                     	ds	2
   979  002A                     screen_saver@i_136:
   980  002A                     instruction_screen@i_146:	
   981                           ; 2 bytes @ 0xA
   982                           
   983                           
   984                           ; 2 bytes @ 0xA
   985  002A                     	ds	2
   986  002C                     screen_saver@i_139:
   987                           
   988                           ; 2 bytes @ 0xC
   989  002C                     	ds	2
   990  002E                     screen_saver@i_140:
   991                           
   992                           ; 2 bytes @ 0xE
   993  002E                     	ds	2
   994                           
   995                           	psect	maintext
   996  0269                     __pmaintext:	
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   999 ;;
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 52 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : B00/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels required when called:    6
  1022 ;; This function calls:
  1023 ;;		_LCD_Init
  1024 ;;		_LCD_Set_Cursor
  1025 ;;		_UART_RX_Init
  1026 ;;		_UART_Read
  1027 ;;		_instruction_screen
  1028 ;;		_led_on
  1029 ;;		_screen_saver
  1030 ;;		_splash_screen
  1031 ;;		_start_led_actions
  1032 ;; This function is called by:
  1033 ;;		Startup code after reset
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037                           
  1038                           ;psect for function _main
  1039  0269                     _main:
  1040                           
  1041                           ;main.c: 55: LCD_Init();
  1042                           
  1043                           ;incstack = 0
  1044                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1045  0269  120A  118A  25AA  120A  118A  	fcall	_LCD_Init
  1046                           
  1047                           ;main.c: 56: LCD_Set_Cursor(1,1);
  1048  026E  01F6               	clrf	LCD_Set_Cursor@c
  1049  026F  0AF6               	incf	LCD_Set_Cursor@c,f
  1050  0270  3001               	movlw	1
  1051  0271  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1052                           
  1053                           ;main.c: 58: UART_RX_Init();
  1054  0276  120A  158A  27BA  120A  118A  	fcall	_UART_RX_Init
  1055  027B                     l1864:
  1056                           
  1057                           ;main.c: 67: {;main.c: 68: if(start_once==1)
  1058  027B  1283               	bcf	3,5	;RP0=0, select bank0
  1059  027C  1303               	bcf	3,6	;RP1=0, select bank0
  1060  027D  0330               	decf	_start_once,w
  1061  027E  1D03               	btfss	3,2
  1062  027F  2A88               	goto	l1870
  1063                           
  1064                           ;main.c: 69: {;main.c: 70: splash_screen();
  1065  0280  120A  158A  27CA  120A  118A  	fcall	_splash_screen
  1066                           
  1067                           ;main.c: 71: start_once =0;
  1068  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1069  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1070  0287  01B0               	clrf	_start_once
  1071  0288                     l1870:
  1072                           
  1073                           ;main.c: 72: };main.c: 74: if(UART_Read()=='1')
  1074  0288  120A  158A  278D  120A  118A  	fcall	_UART_Read
  1075  028D  3A31               	xorlw	49
  1076  028E  1D03               	skipz
  1077  028F  2A96               	goto	l1874
  1078                           
  1079                           ;main.c: 75: {;main.c: 76: led_on(0);
  1080  0290  3000               	movlw	0
  1081  0291  120A  118A  26B4  120A  118A  	fcall	_led_on
  1082  0296                     l1874:
  1083                           
  1084                           ;main.c: 77: };main.c: 78: start_led_actions();
  1085  0296  120A  118A  214A  120A  118A  	fcall	_start_led_actions
  1086                           
  1087                           ;main.c: 81: screen_saver();
  1088  029B  120A  118A  241C  120A  118A  	fcall	_screen_saver
  1089                           
  1090                           ;main.c: 82: instruction_screen();
  1091  02A0  120A  118A  24F0  120A  118A  	fcall	_instruction_screen
  1092  02A5  2A7B               	goto	l1864
  1093  02A6                     __end_of_main:
  1094                           
  1095                           	psect	text1
  1096  014A                     __ptext1:	
  1097 ;; *************** function _start_led_actions *****************
  1098 ;; Defined at:
  1099 ;;		line 262 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1113 ;;      Params:         0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0
  1115 ;;      Temps:          0       3       0       0       0
  1116 ;;      Totals:         0       3       0       0       0
  1117 ;;Total ram usage:        3 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    5
  1120 ;; This function calls:
  1121 ;;		_LCD_Clear
  1122 ;;		_LCD_Set_Cursor
  1123 ;;		_LCD_Write_String
  1124 ;;		_led_off
  1125 ;;		_led_on
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           
  1132                           ;psect for function _start_led_actions
  1133  014A                     _start_led_actions:
  1134                           
  1135                           ;main.c: 265: switch (RecievedData)
  1136                           
  1137                           ;incstack = 0
  1138                           ; Regs used in _start_led_actions: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1139  014A  2A48               	goto	l1746
  1140  014B                     l1624:
  1141  014B  3000               	movlw	0
  1142  014C  120A  118A  26B4  120A  118A  	fcall	_led_on
  1143  0151  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1144  0156  01F6               	clrf	LCD_Set_Cursor@c
  1145  0157  0AF6               	incf	LCD_Set_Cursor@c,f
  1146  0158  3001               	movlw	1
  1147  0159  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1148  015E  30F7               	movlw	low (STR_1| (0+32768))
  1149  015F  00F8               	movwf	LCD_Write_String@str
  1150  0160  3083               	movlw	high (STR_1| (0+32768))
  1151  0161                     L1:
  1152  0161  00F9               	movwf	LCD_Write_String@str+1
  1153  0162  120A  118A  2790  120A  118A  	fcall	_LCD_Write_String
  1154  0167  300B               	movlw	11
  1155  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1157  016A  00A7               	movwf	??_start_led_actions+2
  1158  016B  3026               	movlw	38
  1159  016C  00A6               	movwf	??_start_led_actions+1
  1160  016D  305D               	movlw	93
  1161  016E  00A5               	movwf	??_start_led_actions
  1162  016F                     u457:
  1163  016F  0BA5               	decfsz	??_start_led_actions,f
  1164  0170  296F               	goto	u457
  1165  0171  0BA6               	decfsz	??_start_led_actions+1,f
  1166  0172  296F               	goto	u457
  1167  0173  0BA7               	decfsz	??_start_led_actions+2,f
  1168  0174  296F               	goto	u457
  1169  0175  120A  158A  2798   	fcall	_LCD_Clear
  1170                           
  1171                           ;main.c: 268: break;
  1172  0178  0008               	return
  1173  0179                     l1636:
  1174  0179  3001               	movlw	1
  1175  017A  120A  118A  26B4  120A  118A  	fcall	_led_on
  1176  017F  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1177  0184  01F6               	clrf	LCD_Set_Cursor@c
  1178  0185  0AF6               	incf	LCD_Set_Cursor@c,f
  1179  0186  3001               	movlw	1
  1180  0187  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1181  018C  3006               	movlw	low (STR_2| (0+32768))
  1182  018D  00F8               	movwf	LCD_Write_String@str
  1183  018E  3084               	movlw	high (STR_2| (0+32768))
  1184  018F  2961               	goto	L1
  1185  0190                     l1648:
  1186  0190  3003               	movlw	3
  1187  0191  120A  118A  26B4  120A  118A  	fcall	_led_on
  1188  0196  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1189  019B  01F6               	clrf	LCD_Set_Cursor@c
  1190  019C  0AF6               	incf	LCD_Set_Cursor@c,f
  1191  019D  3001               	movlw	1
  1192  019E  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1193  01A3  30D8               	movlw	low (STR_3| (0+32768))
  1194  01A4  00F8               	movwf	LCD_Write_String@str
  1195  01A5  3083               	movlw	high (STR_3| (0+32768))
  1196  01A6  2961               	goto	L1
  1197  01A7                     l1660:
  1198  01A7  3002               	movlw	2
  1199  01A8  120A  118A  26B4  120A  118A  	fcall	_led_on
  1200  01AD  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1201  01B2  01F6               	clrf	LCD_Set_Cursor@c
  1202  01B3  0AF6               	incf	LCD_Set_Cursor@c,f
  1203  01B4  3001               	movlw	1
  1204  01B5  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1205  01BA  30A7               	movlw	low (STR_4| (0+32768))
  1206  01BB  00F8               	movwf	LCD_Write_String@str
  1207  01BC  3083               	movlw	high (STR_4| (0+32768))
  1208  01BD  2961               	goto	L1
  1209  01BE                     l1672:
  1210  01BE  3006               	movlw	6
  1211  01BF  120A  118A  26B4  120A  118A  	fcall	_led_on
  1212  01C4  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1213  01C9  01F6               	clrf	LCD_Set_Cursor@c
  1214  01CA  0AF6               	incf	LCD_Set_Cursor@c,f
  1215  01CB  3001               	movlw	1
  1216  01CC  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1217  01D1  30C8               	movlw	low (STR_5| (0+32768))
  1218  01D2  00F8               	movwf	LCD_Write_String@str
  1219  01D3  3083               	movlw	high (STR_5| (0+32768))
  1220  01D4  2961               	goto	L1
  1221  01D5                     l1684:
  1222  01D5  3000               	movlw	0
  1223  01D6  120A  118A  22A6  120A  118A  	fcall	_led_off
  1224  01DB  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1225  01E0  01F6               	clrf	LCD_Set_Cursor@c
  1226  01E1  0AF6               	incf	LCD_Set_Cursor@c,f
  1227  01E2  3001               	movlw	1
  1228  01E3  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1229  01E8  30B8               	movlw	low (STR_6| (0+32768))
  1230  01E9  00F8               	movwf	LCD_Write_String@str
  1231  01EA  3083               	movlw	high (STR_6| (0+32768))
  1232  01EB  2961               	goto	L1
  1233  01EC                     l1696:
  1234  01EC  3001               	movlw	1
  1235  01ED  120A  118A  22A6  120A  118A  	fcall	_led_off
  1236  01F2  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1237  01F7  01F6               	clrf	LCD_Set_Cursor@c
  1238  01F8  0AF6               	incf	LCD_Set_Cursor@c,f
  1239  01F9  3001               	movlw	1
  1240  01FA  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1241  01FF  30E8               	movlw	low (STR_7| (0+32768))
  1242  0200  00F8               	movwf	LCD_Write_String@str
  1243  0201  3083               	movlw	high (STR_7| (0+32768))
  1244  0202  2961               	goto	L1
  1245  0203                     l1708:
  1246  0203  3003               	movlw	3
  1247  0204  120A  118A  22A6  120A  118A  	fcall	_led_off
  1248  0209  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1249  020E  01F6               	clrf	LCD_Set_Cursor@c
  1250  020F  0AF6               	incf	LCD_Set_Cursor@c,f
  1251  0210  3001               	movlw	1
  1252  0211  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1253  0216  3096               	movlw	low (STR_8| (0+32768))
  1254  0217  00F8               	movwf	LCD_Write_String@str
  1255  0218  3083               	movlw	high (STR_8| (0+32768))
  1256  0219  2961               	goto	L1
  1257  021A                     l1720:
  1258  021A  3002               	movlw	2
  1259  021B  120A  118A  22A6  120A  118A  	fcall	_led_off
  1260  0220  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1261  0225  01F6               	clrf	LCD_Set_Cursor@c
  1262  0226  0AF6               	incf	LCD_Set_Cursor@c,f
  1263  0227  3001               	movlw	1
  1264  0228  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1265  022D  3073               	movlw	low (STR_9| (0+32768))
  1266  022E  00F8               	movwf	LCD_Write_String@str
  1267  022F  3083               	movlw	high (STR_9| (0+32768))
  1268  0230  2961               	goto	L1
  1269  0231                     l1732:
  1270  0231  3006               	movlw	6
  1271  0232  120A  118A  22A6  120A  118A  	fcall	_led_off
  1272  0237  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  1273  023C  01F6               	clrf	LCD_Set_Cursor@c
  1274  023D  0AF6               	incf	LCD_Set_Cursor@c,f
  1275  023E  3001               	movlw	1
  1276  023F  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  1277  0244  3085               	movlw	low (STR_10| (0+32768))
  1278  0245  00F8               	movwf	LCD_Write_String@str
  1279  0246  3083               	movlw	high (STR_10| (0+32768))
  1280  0247  2961               	goto	L1
  1281  0248                     l1746:
  1282  0248  087A               	movf	_RecievedData,w
  1283                           
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 10, Range of values is 49 to 90
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte           31    16 (average)
  1289                           ; direct_byte          137    11 (fixed)
  1290                           ; jumptable            263     9 (fixed)
  1291                           ;	Chosen strategy is simple_byte
  1292  0249  3A31               	xorlw	49	; case 49
  1293  024A  1903               	skipnz
  1294  024B  294B               	goto	l1624
  1295  024C  3A03               	xorlw	3	; case 50
  1296  024D  1903               	skipnz
  1297  024E  29D5               	goto	l1684
  1298  024F  3A01               	xorlw	1	; case 51
  1299  0250  1903               	skipnz
  1300  0251  2979               	goto	l1636
  1301  0252  3A07               	xorlw	7	; case 52
  1302  0253  1903               	skipnz
  1303  0254  29EC               	goto	l1696
  1304  0255  3A01               	xorlw	1	; case 53
  1305  0256  1903               	skipnz
  1306  0257  2990               	goto	l1648
  1307  0258  3A03               	xorlw	3	; case 54
  1308  0259  1903               	skipnz
  1309  025A  2A03               	goto	l1708
  1310  025B  3A01               	xorlw	1	; case 55
  1311  025C  1903               	skipnz
  1312  025D  29A7               	goto	l1660
  1313  025E  3A0F               	xorlw	15	; case 56
  1314  025F  1903               	skipnz
  1315  0260  2A1A               	goto	l1720
  1316  0261  3A68               	xorlw	104	; case 80
  1317  0262  1903               	skipnz
  1318  0263  29BE               	goto	l1672
  1319  0264  3A0A               	xorlw	10	; case 90
  1320  0265  1903               	skipnz
  1321  0266  2A31               	goto	l1732
  1322  0267  2A68               	goto	l80
  1323  0268                     l80:
  1324  0268  0008               	return
  1325  0269                     __end_of_start_led_actions:
  1326                           
  1327                           	psect	text2
  1328  0FCA                     __ptext2:	
  1329 ;; *************** function _splash_screen *****************
  1330 ;; Defined at:
  1331 ;;		line 112 in file "main.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 300/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0       0
  1347 ;;      Temps:          0       3       0       0       0
  1348 ;;      Totals:         0       3       0       0       0
  1349 ;;Total ram usage:        3 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    5
  1352 ;; This function calls:
  1353 ;;		_LCD_Clear
  1354 ;;		_led_testing
  1355 ;;		_new_led
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _splash_screen
  1363  0FCA                     _splash_screen:
  1364                           
  1365                           ;main.c: 164: new_led(0);
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _splash_screen: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1369  0FCA  3000               	movlw	0
  1370  0FCB  120A  118A  2665  120A  158A  	fcall	_new_led
  1371                           
  1372                           ;main.c: 165: new_led(1);
  1373  0FD0  3001               	movlw	1
  1374  0FD1  120A  118A  2665  120A  158A  	fcall	_new_led
  1375                           
  1376                           ;main.c: 166: new_led(3);
  1377  0FD6  3003               	movlw	3
  1378  0FD7  120A  118A  2665  120A  158A  	fcall	_new_led
  1379                           
  1380                           ;main.c: 167: new_led(2);
  1381  0FDC  3002               	movlw	2
  1382  0FDD  120A  118A  2665  120A  158A  	fcall	_new_led
  1383                           
  1384                           ;main.c: 168: new_led(6);
  1385  0FE2  3006               	movlw	6
  1386  0FE3  120A  118A  2665  120A  158A  	fcall	_new_led
  1387                           
  1388                           ;main.c: 169: _delay((unsigned long)((800)*(8000000/4000.0)));
  1389  0FE8  3009               	movlw	9
  1390  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0FEB  00A2               	movwf	??_splash_screen+2
  1393  0FEC  301E               	movlw	30
  1394  0FED  00A1               	movwf	??_splash_screen+1
  1395  0FEE  30E3               	movlw	227
  1396  0FEF  00A0               	movwf	??_splash_screen
  1397  0FF0                     u467:
  1398  0FF0  0BA0               	decfsz	??_splash_screen,f
  1399  0FF1  2FF0               	goto	u467
  1400  0FF2  0BA1               	decfsz	??_splash_screen+1,f
  1401  0FF3  2FF0               	goto	u467
  1402  0FF4  0BA2               	decfsz	??_splash_screen+2,f
  1403  0FF5  2FF0               	goto	u467
  1404  0FF6  2FF7               	nop2
  1405                           
  1406                           ;main.c: 170: LCD_Clear();
  1407  0FF7  120A  158A  2798  120A  158A  	fcall	_LCD_Clear
  1408                           
  1409                           ;main.c: 182: led_testing();
  1410  0FFC  120A  118A  2018   	fcall	_led_testing
  1411  0FFF  0008               	return
  1412  1000                     __end_of_splash_screen:
  1413                           
  1414                           	psect	text3
  1415  0665                     __ptext3:	
  1416 ;; *************** function _new_led *****************
  1417 ;; Defined at:
  1418 ;;		line 15 in file "led.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;  pin_number      1    wreg     unsigned char 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  pin_number      1    3[COMMON] unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1432 ;;      Params:         0       0       0       0       0
  1433 ;;      Locals:         1       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0
  1435 ;;      Totals:         1       0       0       0       0
  1436 ;;Total ram usage:        1 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    2
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_splash_screen
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           
  1447                           ;psect for function _new_led
  1448  0665                     _new_led:
  1449                           
  1450                           ;incstack = 0
  1451                           ; Regs used in _new_led: [wreg-fsr0h+status,2+status,0]
  1452                           ;new_led@pin_number stored from wreg
  1453  0665  00F3               	movwf	new_led@pin_number
  1454                           
  1455                           ;led.c: 18: switch(pin_number)
  1456  0666  2E99               	goto	l1478
  1457  0667                     l150:	
  1458                           ;led.c: 19: {;led.c: 20: case 0:
  1459                           
  1460                           
  1461                           ;led.c: 21: TRISAbits.TRISA0 = 0 ;
  1462  0667  1683               	bsf	3,5	;RP0=1, select bank1
  1463  0668  1303               	bcf	3,6	;RP1=0, select bank1
  1464  0669  1005               	bcf	5,0	;volatile
  1465                           
  1466                           ;led.c: 22: ADCON1=6;
  1467  066A  3006               	movlw	6
  1468  066B  009F               	movwf	31	;volatile
  1469                           
  1470                           ;led.c: 23: RA0=0;
  1471  066C  1283               	bcf	3,5	;RP0=0, select bank0
  1472  066D  1005               	bcf	5,0	;volatile
  1473                           
  1474                           ;led.c: 25: break;
  1475  066E  0008               	return
  1476  066F                     l152:	
  1477                           ;led.c: 26: case 1:
  1478                           
  1479                           
  1480                           ;led.c: 27: TRISEbits.TRISE0 = 0 ;
  1481  066F  1683               	bsf	3,5	;RP0=1, select bank1
  1482  0670  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0671  1009               	bcf	9,0	;volatile
  1484                           
  1485                           ;led.c: 28: PORTEbits.RE0=0;
  1486  0672  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0673  1009               	bcf	9,0	;volatile
  1488                           
  1489                           ;led.c: 30: break;
  1490  0674  0008               	return
  1491  0675                     l153:	
  1492                           ;led.c: 31: case 2:
  1493                           
  1494                           
  1495                           ;led.c: 32: TRISDbits.TRISD0 = 0 ;
  1496  0675  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0676  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0677  1008               	bcf	8,0	;volatile
  1499                           
  1500                           ;led.c: 33: RD0=0;
  1501  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0679  1008               	bcf	8,0	;volatile
  1503                           
  1504                           ;led.c: 35: break;
  1505  067A  0008               	return
  1506  067B                     l154:	
  1507                           ;led.c: 36: case 3:
  1508                           
  1509                           
  1510                           ;led.c: 37: TRISCbits.TRISC3 = 0 ;
  1511  067B  1683               	bsf	3,5	;RP0=1, select bank1
  1512  067C  1303               	bcf	3,6	;RP1=0, select bank1
  1513  067D  1187               	bcf	7,3	;volatile
  1514                           
  1515                           ;led.c: 38: RC3=0;
  1516  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1517  067F  1187               	bcf	7,3	;volatile
  1518                           
  1519                           ;led.c: 40: break;
  1520  0680  0008               	return
  1521  0681                     l155:	
  1522                           ;led.c: 41: case 4:
  1523                           
  1524                           
  1525                           ;led.c: 42: TRISAbits.TRISA4 = 0 ;
  1526  0681  1683               	bsf	3,5	;RP0=1, select bank1
  1527  0682  1303               	bcf	3,6	;RP1=0, select bank1
  1528  0683  1205               	bcf	5,4	;volatile
  1529                           
  1530                           ;led.c: 43: RA4=0;
  1531  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1532  0685  1205               	bcf	5,4	;volatile
  1533                           
  1534                           ;led.c: 45: break;
  1535  0686  0008               	return
  1536  0687                     l156:	
  1537                           ;led.c: 46: case 5:
  1538                           
  1539                           
  1540                           ;led.c: 47: TRISAbits.TRISA5 = 0 ;
  1541  0687  1683               	bsf	3,5	;RP0=1, select bank1
  1542  0688  1303               	bcf	3,6	;RP1=0, select bank1
  1543  0689  1285               	bcf	5,5	;volatile
  1544                           
  1545                           ;led.c: 48: RA5=0;
  1546  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1547  068B  1285               	bcf	5,5	;volatile
  1548                           
  1549                           ;led.c: 50: break;
  1550  068C  0008               	return
  1551  068D                     l157:	
  1552                           ;led.c: 51: case 6:
  1553                           
  1554                           
  1555                           ;led.c: 52: TRISBbits.TRISB0 = 0 ;
  1556  068D  1683               	bsf	3,5	;RP0=1, select bank1
  1557  068E  1303               	bcf	3,6	;RP1=0, select bank1
  1558  068F  1006               	bcf	6,0	;volatile
  1559                           
  1560                           ;led.c: 53: RB0=0;
  1561  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0691  1006               	bcf	6,0	;volatile
  1563                           
  1564                           ;led.c: 55: break;
  1565  0692  0008               	return
  1566  0693                     l158:	
  1567                           ;led.c: 56: case 7:
  1568                           
  1569                           
  1570                           ;led.c: 57: TRISBbits.TRISB1 = 0 ;
  1571  0693  1683               	bsf	3,5	;RP0=1, select bank1
  1572  0694  1303               	bcf	3,6	;RP1=0, select bank1
  1573  0695  1086               	bcf	6,1	;volatile
  1574                           
  1575                           ;led.c: 58: RB1=0;
  1576  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0697  1086               	bcf	6,1	;volatile
  1578                           
  1579                           ;led.c: 60: break;
  1580  0698  0008               	return
  1581  0699                     l1478:
  1582  0699  0873               	movf	new_led@pin_number,w
  1583                           
  1584                           ; Switch size 1, requested type "simple"
  1585                           ; Number of cases is 8, Range of values is 0 to 7
  1586                           ; switch strategies available:
  1587                           ; Name         Instructions Cycles
  1588                           ; simple_byte           25    13 (average)
  1589                           ; direct_byte           32     8 (fixed)
  1590                           ; jumptable            260     6 (fixed)
  1591                           ;	Chosen strategy is simple_byte
  1592  069A  3A00               	xorlw	0	; case 0
  1593  069B  1903               	skipnz
  1594  069C  2E67               	goto	l150
  1595  069D  3A01               	xorlw	1	; case 1
  1596  069E  1903               	skipnz
  1597  069F  2E6F               	goto	l152
  1598  06A0  3A03               	xorlw	3	; case 2
  1599  06A1  1903               	skipnz
  1600  06A2  2E75               	goto	l153
  1601  06A3  3A01               	xorlw	1	; case 3
  1602  06A4  1903               	skipnz
  1603  06A5  2E7B               	goto	l154
  1604  06A6  3A07               	xorlw	7	; case 4
  1605  06A7  1903               	skipnz
  1606  06A8  2E81               	goto	l155
  1607  06A9  3A01               	xorlw	1	; case 5
  1608  06AA  1903               	skipnz
  1609  06AB  2E87               	goto	l156
  1610  06AC  3A03               	xorlw	3	; case 6
  1611  06AD  1903               	skipnz
  1612  06AE  2E8D               	goto	l157
  1613  06AF  3A01               	xorlw	1	; case 7
  1614  06B0  1903               	skipnz
  1615  06B1  2E93               	goto	l158
  1616  06B2  2EB3               	goto	l160
  1617  06B3                     l160:
  1618  06B3  0008               	return
  1619  06B4                     __end_of_new_led:
  1620                           
  1621                           	psect	text4
  1622  0018                     __ptext4:	
  1623 ;; *************** function _led_testing *****************
  1624 ;; Defined at:
  1625 ;;		line 198 in file "main.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 300/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1639 ;;      Params:         0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0
  1641 ;;      Temps:          3       0       0       0       0
  1642 ;;      Totals:         3       0       0       0       0
  1643 ;;Total ram usage:        3 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    4
  1646 ;; This function calls:
  1647 ;;		_led_off
  1648 ;;		_led_on
  1649 ;;		_start_led_actions2
  1650 ;; This function is called by:
  1651 ;;		_splash_screen
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function _led_testing
  1657  0018                     _led_testing:
  1658                           
  1659                           ;main.c: 200: RecievedData = 49;
  1660                           
  1661                           ;incstack = 0
  1662                           ; Regs used in _led_testing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1663  0018  3031               	movlw	49
  1664  0019  00F6               	movwf	??_led_testing
  1665  001A  0876               	movf	??_led_testing,w
  1666  001B  00FA               	movwf	_RecievedData
  1667                           
  1668                           ;main.c: 201: start_led_actions2();
  1669  001C  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1670                           
  1671                           ;main.c: 202: _delay((unsigned long)((100)*(8000000/4000.0)));
  1672  0021  3002               	movlw	2
  1673  0022  00F8               	movwf	??_led_testing+2
  1674  0023  3004               	movlw	4
  1675  0024  00F7               	movwf	??_led_testing+1
  1676  0025  30BA               	movlw	186
  1677  0026  00F6               	movwf	??_led_testing
  1678  0027                     u477:
  1679  0027  0BF6               	decfsz	??_led_testing,f
  1680  0028  2827               	goto	u477
  1681  0029  0BF7               	decfsz	??_led_testing+1,f
  1682  002A  2827               	goto	u477
  1683  002B  0BF8               	decfsz	??_led_testing+2,f
  1684  002C  2827               	goto	u477
  1685  002D  0000               	nop
  1686                           
  1687                           ;main.c: 203: RecievedData = 50;
  1688  002E  3032               	movlw	50
  1689  002F  00F6               	movwf	??_led_testing
  1690  0030  0876               	movf	??_led_testing,w
  1691  0031  00FA               	movwf	_RecievedData
  1692                           
  1693                           ;main.c: 204: start_led_actions2();
  1694  0032  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1695                           
  1696                           ;main.c: 205: _delay((unsigned long)((100)*(8000000/4000.0)));
  1697  0037  3002               	movlw	2
  1698  0038  00F8               	movwf	??_led_testing+2
  1699  0039  3004               	movlw	4
  1700  003A  00F7               	movwf	??_led_testing+1
  1701  003B  30BA               	movlw	186
  1702  003C  00F6               	movwf	??_led_testing
  1703  003D                     u487:
  1704  003D  0BF6               	decfsz	??_led_testing,f
  1705  003E  283D               	goto	u487
  1706  003F  0BF7               	decfsz	??_led_testing+1,f
  1707  0040  283D               	goto	u487
  1708  0041  0BF8               	decfsz	??_led_testing+2,f
  1709  0042  283D               	goto	u487
  1710  0043  0000               	nop
  1711                           
  1712                           ;main.c: 207: RecievedData = 51;
  1713  0044  3033               	movlw	51
  1714  0045  00F6               	movwf	??_led_testing
  1715  0046  0876               	movf	??_led_testing,w
  1716  0047  00FA               	movwf	_RecievedData
  1717                           
  1718                           ;main.c: 208: start_led_actions2();
  1719  0048  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1720                           
  1721                           ;main.c: 209: _delay((unsigned long)((100)*(8000000/4000.0)));
  1722  004D  3002               	movlw	2
  1723  004E  00F8               	movwf	??_led_testing+2
  1724  004F  3004               	movlw	4
  1725  0050  00F7               	movwf	??_led_testing+1
  1726  0051  30BA               	movlw	186
  1727  0052  00F6               	movwf	??_led_testing
  1728  0053                     u497:
  1729  0053  0BF6               	decfsz	??_led_testing,f
  1730  0054  2853               	goto	u497
  1731  0055  0BF7               	decfsz	??_led_testing+1,f
  1732  0056  2853               	goto	u497
  1733  0057  0BF8               	decfsz	??_led_testing+2,f
  1734  0058  2853               	goto	u497
  1735  0059  0000               	nop
  1736                           
  1737                           ;main.c: 210: RecievedData = 52;
  1738  005A  3034               	movlw	52
  1739  005B  00F6               	movwf	??_led_testing
  1740  005C  0876               	movf	??_led_testing,w
  1741  005D  00FA               	movwf	_RecievedData
  1742                           
  1743                           ;main.c: 211: start_led_actions2();
  1744  005E  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1745                           
  1746                           ;main.c: 212: _delay((unsigned long)((100)*(8000000/4000.0)));
  1747  0063  3002               	movlw	2
  1748  0064  00F8               	movwf	??_led_testing+2
  1749  0065  3004               	movlw	4
  1750  0066  00F7               	movwf	??_led_testing+1
  1751  0067  30BA               	movlw	186
  1752  0068  00F6               	movwf	??_led_testing
  1753  0069                     u507:
  1754  0069  0BF6               	decfsz	??_led_testing,f
  1755  006A  2869               	goto	u507
  1756  006B  0BF7               	decfsz	??_led_testing+1,f
  1757  006C  2869               	goto	u507
  1758  006D  0BF8               	decfsz	??_led_testing+2,f
  1759  006E  2869               	goto	u507
  1760  006F  0000               	nop
  1761                           
  1762                           ;main.c: 214: RecievedData = 53;
  1763  0070  3035               	movlw	53
  1764  0071  00F6               	movwf	??_led_testing
  1765  0072  0876               	movf	??_led_testing,w
  1766  0073  00FA               	movwf	_RecievedData
  1767                           
  1768                           ;main.c: 215: start_led_actions2();
  1769  0074  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1770                           
  1771                           ;main.c: 216: _delay((unsigned long)((100)*(8000000/4000.0)));
  1772  0079  3002               	movlw	2
  1773  007A  00F8               	movwf	??_led_testing+2
  1774  007B  3004               	movlw	4
  1775  007C  00F7               	movwf	??_led_testing+1
  1776  007D  30BA               	movlw	186
  1777  007E  00F6               	movwf	??_led_testing
  1778  007F                     u517:
  1779  007F  0BF6               	decfsz	??_led_testing,f
  1780  0080  287F               	goto	u517
  1781  0081  0BF7               	decfsz	??_led_testing+1,f
  1782  0082  287F               	goto	u517
  1783  0083  0BF8               	decfsz	??_led_testing+2,f
  1784  0084  287F               	goto	u517
  1785  0085  0000               	nop
  1786                           
  1787                           ;main.c: 217: RecievedData = 54;
  1788  0086  3036               	movlw	54
  1789  0087  00F6               	movwf	??_led_testing
  1790  0088  0876               	movf	??_led_testing,w
  1791  0089  00FA               	movwf	_RecievedData
  1792                           
  1793                           ;main.c: 218: start_led_actions2();
  1794  008A  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1795                           
  1796                           ;main.c: 219: _delay((unsigned long)((100)*(8000000/4000.0)));
  1797  008F  3002               	movlw	2
  1798  0090  00F8               	movwf	??_led_testing+2
  1799  0091  3004               	movlw	4
  1800  0092  00F7               	movwf	??_led_testing+1
  1801  0093  30BA               	movlw	186
  1802  0094  00F6               	movwf	??_led_testing
  1803  0095                     u527:
  1804  0095  0BF6               	decfsz	??_led_testing,f
  1805  0096  2895               	goto	u527
  1806  0097  0BF7               	decfsz	??_led_testing+1,f
  1807  0098  2895               	goto	u527
  1808  0099  0BF8               	decfsz	??_led_testing+2,f
  1809  009A  2895               	goto	u527
  1810  009B  0000               	nop
  1811                           
  1812                           ;main.c: 221: RecievedData = 55;
  1813  009C  3037               	movlw	55
  1814  009D  00F6               	movwf	??_led_testing
  1815  009E  0876               	movf	??_led_testing,w
  1816  009F  00FA               	movwf	_RecievedData
  1817                           
  1818                           ;main.c: 222: start_led_actions2();
  1819  00A0  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1820                           
  1821                           ;main.c: 223: _delay((unsigned long)((100)*(8000000/4000.0)));
  1822  00A5  3002               	movlw	2
  1823  00A6  00F8               	movwf	??_led_testing+2
  1824  00A7  3004               	movlw	4
  1825  00A8  00F7               	movwf	??_led_testing+1
  1826  00A9  30BA               	movlw	186
  1827  00AA  00F6               	movwf	??_led_testing
  1828  00AB                     u537:
  1829  00AB  0BF6               	decfsz	??_led_testing,f
  1830  00AC  28AB               	goto	u537
  1831  00AD  0BF7               	decfsz	??_led_testing+1,f
  1832  00AE  28AB               	goto	u537
  1833  00AF  0BF8               	decfsz	??_led_testing+2,f
  1834  00B0  28AB               	goto	u537
  1835  00B1  0000               	nop
  1836                           
  1837                           ;main.c: 224: RecievedData = 56;
  1838  00B2  3038               	movlw	56
  1839  00B3  00F6               	movwf	??_led_testing
  1840  00B4  0876               	movf	??_led_testing,w
  1841  00B5  00FA               	movwf	_RecievedData
  1842                           
  1843                           ;main.c: 225: start_led_actions2();
  1844  00B6  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1845                           
  1846                           ;main.c: 226: _delay((unsigned long)((100)*(8000000/4000.0)));
  1847  00BB  3002               	movlw	2
  1848  00BC  00F8               	movwf	??_led_testing+2
  1849  00BD  3004               	movlw	4
  1850  00BE  00F7               	movwf	??_led_testing+1
  1851  00BF  30BA               	movlw	186
  1852  00C0  00F6               	movwf	??_led_testing
  1853  00C1                     u547:
  1854  00C1  0BF6               	decfsz	??_led_testing,f
  1855  00C2  28C1               	goto	u547
  1856  00C3  0BF7               	decfsz	??_led_testing+1,f
  1857  00C4  28C1               	goto	u547
  1858  00C5  0BF8               	decfsz	??_led_testing+2,f
  1859  00C6  28C1               	goto	u547
  1860  00C7  0000               	nop
  1861                           
  1862                           ;main.c: 231: RecievedData = 80;
  1863  00C8  3050               	movlw	80
  1864  00C9  00F6               	movwf	??_led_testing
  1865  00CA  0876               	movf	??_led_testing,w
  1866  00CB  00FA               	movwf	_RecievedData
  1867                           
  1868                           ;main.c: 232: start_led_actions2();
  1869  00CC  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1870                           
  1871                           ;main.c: 233: _delay((unsigned long)((100)*(8000000/4000.0)));
  1872  00D1  3002               	movlw	2
  1873  00D2  00F8               	movwf	??_led_testing+2
  1874  00D3  3004               	movlw	4
  1875  00D4  00F7               	movwf	??_led_testing+1
  1876  00D5  30BA               	movlw	186
  1877  00D6  00F6               	movwf	??_led_testing
  1878  00D7                     u557:
  1879  00D7  0BF6               	decfsz	??_led_testing,f
  1880  00D8  28D7               	goto	u557
  1881  00D9  0BF7               	decfsz	??_led_testing+1,f
  1882  00DA  28D7               	goto	u557
  1883  00DB  0BF8               	decfsz	??_led_testing+2,f
  1884  00DC  28D7               	goto	u557
  1885  00DD  0000               	nop
  1886                           
  1887                           ;main.c: 234: RecievedData = 90;
  1888  00DE  305A               	movlw	90
  1889  00DF  00F6               	movwf	??_led_testing
  1890  00E0  0876               	movf	??_led_testing,w
  1891  00E1  00FA               	movwf	_RecievedData
  1892                           
  1893                           ;main.c: 235: start_led_actions2();
  1894  00E2  120A  118A  2611  120A  118A  	fcall	_start_led_actions2
  1895                           
  1896                           ;main.c: 236: _delay((unsigned long)((100)*(8000000/4000.0)));
  1897  00E7  3002               	movlw	2
  1898  00E8  00F8               	movwf	??_led_testing+2
  1899  00E9  3004               	movlw	4
  1900  00EA  00F7               	movwf	??_led_testing+1
  1901  00EB  30BA               	movlw	186
  1902  00EC  00F6               	movwf	??_led_testing
  1903  00ED                     u567:
  1904  00ED  0BF6               	decfsz	??_led_testing,f
  1905  00EE  28ED               	goto	u567
  1906  00EF  0BF7               	decfsz	??_led_testing+1,f
  1907  00F0  28ED               	goto	u567
  1908  00F1  0BF8               	decfsz	??_led_testing+2,f
  1909  00F2  28ED               	goto	u567
  1910  00F3  0000               	nop
  1911                           
  1912                           ;main.c: 240: led_on(6) ;
  1913  00F4  3006               	movlw	6
  1914  00F5  120A  118A  26B4  120A  118A  	fcall	_led_on
  1915                           
  1916                           ;main.c: 241: led_on(1) ;
  1917  00FA  3001               	movlw	1
  1918  00FB  120A  118A  26B4  120A  118A  	fcall	_led_on
  1919                           
  1920                           ;main.c: 242: led_on(0) ;
  1921  0100  3000               	movlw	0
  1922  0101  120A  118A  26B4  120A  118A  	fcall	_led_on
  1923                           
  1924                           ;main.c: 243: led_on(3) ;
  1925  0106  3003               	movlw	3
  1926  0107  120A  118A  26B4  120A  118A  	fcall	_led_on
  1927                           
  1928                           ;main.c: 244: led_on(2) ;
  1929  010C  3002               	movlw	2
  1930  010D  120A  118A  26B4  120A  118A  	fcall	_led_on
  1931                           
  1932                           ;main.c: 247: _delay((unsigned long)((200)*(8000000/4000.0)));
  1933  0112  3003               	movlw	3
  1934  0113  00F8               	movwf	??_led_testing+2
  1935  0114  3008               	movlw	8
  1936  0115  00F7               	movwf	??_led_testing+1
  1937  0116  3077               	movlw	119
  1938  0117  00F6               	movwf	??_led_testing
  1939  0118                     u577:
  1940  0118  0BF6               	decfsz	??_led_testing,f
  1941  0119  2918               	goto	u577
  1942  011A  0BF7               	decfsz	??_led_testing+1,f
  1943  011B  2918               	goto	u577
  1944  011C  0BF8               	decfsz	??_led_testing+2,f
  1945  011D  2918               	goto	u577
  1946                           
  1947                           ;main.c: 249: led_off(6) ;
  1948  011E  3006               	movlw	6
  1949  011F  120A  118A  22A6  120A  118A  	fcall	_led_off
  1950                           
  1951                           ;main.c: 250: led_off(1) ;
  1952  0124  3001               	movlw	1
  1953  0125  120A  118A  22A6  120A  118A  	fcall	_led_off
  1954                           
  1955                           ;main.c: 251: led_off(0) ;
  1956  012A  3000               	movlw	0
  1957  012B  120A  118A  22A6  120A  118A  	fcall	_led_off
  1958                           
  1959                           ;main.c: 252: led_off(3) ;
  1960  0130  3003               	movlw	3
  1961  0131  120A  118A  22A6  120A  118A  	fcall	_led_off
  1962                           
  1963                           ;main.c: 253: led_off(2) ;
  1964  0136  3002               	movlw	2
  1965  0137  120A  118A  22A6  120A  118A  	fcall	_led_off
  1966                           
  1967                           ;main.c: 255: _delay((unsigned long)((100)*(8000000/4000.0)));
  1968  013C  3002               	movlw	2
  1969  013D  00F8               	movwf	??_led_testing+2
  1970  013E  3004               	movlw	4
  1971  013F  00F7               	movwf	??_led_testing+1
  1972  0140  30BA               	movlw	186
  1973  0141  00F6               	movwf	??_led_testing
  1974  0142                     u587:
  1975  0142  0BF6               	decfsz	??_led_testing,f
  1976  0143  2942               	goto	u587
  1977  0144  0BF7               	decfsz	??_led_testing+1,f
  1978  0145  2942               	goto	u587
  1979  0146  0BF8               	decfsz	??_led_testing+2,f
  1980  0147  2942               	goto	u587
  1981  0148  0000               	nop
  1982  0149  0008               	return
  1983  014A                     __end_of_led_testing:
  1984                           
  1985                           	psect	text5
  1986  0611                     __ptext5:	
  1987 ;; *************** function _start_led_actions2 *****************
  1988 ;; Defined at:
  1989 ;;		line 300 in file "main.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2003 ;;      Params:         0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    3
  2010 ;; This function calls:
  2011 ;;		_led_off
  2012 ;;		_led_on
  2013 ;; This function is called by:
  2014 ;;		_led_testing
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           
  2019                           ;psect for function _start_led_actions2
  2020  0611                     _start_led_actions2:
  2021                           
  2022                           ;main.c: 302: switch (RecievedData)
  2023                           
  2024                           ;incstack = 0
  2025                           ; Regs used in _start_led_actions2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2026  0611  2E44               	goto	l1414
  2027  0612                     l1392:
  2028  0612  3000               	movlw	0
  2029  0613  120A  118A  26B4   	fcall	_led_on
  2030                           
  2031                           ;main.c: 305: break;
  2032  0616  0008               	return
  2033  0617                     l1394:
  2034  0617  3001               	movlw	1
  2035  0618  120A  118A  26B4   	fcall	_led_on
  2036                           
  2037                           ;main.c: 307: break;
  2038  061B  0008               	return
  2039  061C                     l1396:
  2040  061C  3003               	movlw	3
  2041  061D  120A  118A  26B4   	fcall	_led_on
  2042                           
  2043                           ;main.c: 309: break;
  2044  0620  0008               	return
  2045  0621                     l1398:
  2046  0621  3002               	movlw	2
  2047  0622  120A  118A  26B4   	fcall	_led_on
  2048                           
  2049                           ;main.c: 311: break;
  2050  0625  0008               	return
  2051  0626                     l1400:
  2052  0626  3006               	movlw	6
  2053  0627  120A  118A  26B4   	fcall	_led_on
  2054                           
  2055                           ;main.c: 313: break;
  2056  062A  0008               	return
  2057  062B                     l1402:
  2058  062B  3000               	movlw	0
  2059  062C  120A  118A  22A6   	fcall	_led_off
  2060                           
  2061                           ;main.c: 317: break;
  2062  062F  0008               	return
  2063  0630                     l1404:
  2064  0630  3001               	movlw	1
  2065  0631  120A  118A  22A6   	fcall	_led_off
  2066                           
  2067                           ;main.c: 319: break;
  2068  0634  0008               	return
  2069  0635                     l1406:
  2070  0635  3003               	movlw	3
  2071  0636  120A  118A  22A6   	fcall	_led_off
  2072                           
  2073                           ;main.c: 321: break;
  2074  0639  0008               	return
  2075  063A                     l1408:
  2076  063A  3002               	movlw	2
  2077  063B  120A  118A  22A6   	fcall	_led_off
  2078                           
  2079                           ;main.c: 323: break;
  2080  063E  0008               	return
  2081  063F                     l1410:
  2082  063F  3006               	movlw	6
  2083  0640  120A  118A  22A6   	fcall	_led_off
  2084                           
  2085                           ;main.c: 325: break;
  2086  0643  0008               	return
  2087  0644                     l1414:
  2088  0644  087A               	movf	_RecievedData,w
  2089                           
  2090                           ; Switch size 1, requested type "simple"
  2091                           ; Number of cases is 10, Range of values is 49 to 90
  2092                           ; switch strategies available:
  2093                           ; Name         Instructions Cycles
  2094                           ; simple_byte           31    16 (average)
  2095                           ; direct_byte          137    11 (fixed)
  2096                           ; jumptable            263     9 (fixed)
  2097                           ;	Chosen strategy is simple_byte
  2098  0645  3A31               	xorlw	49	; case 49
  2099  0646  1903               	skipnz
  2100  0647  2E12               	goto	l1392
  2101  0648  3A03               	xorlw	3	; case 50
  2102  0649  1903               	skipnz
  2103  064A  2E2B               	goto	l1402
  2104  064B  3A01               	xorlw	1	; case 51
  2105  064C  1903               	skipnz
  2106  064D  2E17               	goto	l1394
  2107  064E  3A07               	xorlw	7	; case 52
  2108  064F  1903               	skipnz
  2109  0650  2E30               	goto	l1404
  2110  0651  3A01               	xorlw	1	; case 53
  2111  0652  1903               	skipnz
  2112  0653  2E1C               	goto	l1396
  2113  0654  3A03               	xorlw	3	; case 54
  2114  0655  1903               	skipnz
  2115  0656  2E35               	goto	l1406
  2116  0657  3A01               	xorlw	1	; case 55
  2117  0658  1903               	skipnz
  2118  0659  2E21               	goto	l1398
  2119  065A  3A0F               	xorlw	15	; case 56
  2120  065B  1903               	skipnz
  2121  065C  2E3A               	goto	l1408
  2122  065D  3A68               	xorlw	104	; case 80
  2123  065E  1903               	skipnz
  2124  065F  2E26               	goto	l1400
  2125  0660  3A0A               	xorlw	10	; case 90
  2126  0661  1903               	skipnz
  2127  0662  2E3F               	goto	l1410
  2128  0663  2E64               	goto	l96
  2129  0664                     l96:
  2130  0664  0008               	return
  2131  0665                     __end_of_start_led_actions2:
  2132                           
  2133                           	psect	text6
  2134  06B4                     __ptext6:	
  2135 ;; *************** function _led_on *****************
  2136 ;; Defined at:
  2137 ;;		line 132 in file "led.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  pin_number      1    wreg     unsigned char 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  pin_number      1    5[COMMON] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2151 ;;      Params:         0       0       0       0       0
  2152 ;;      Locals:         1       0       0       0       0
  2153 ;;      Temps:          2       0       0       0       0
  2154 ;;      Totals:         3       0       0       0       0
  2155 ;;Total ram usage:        3 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    2
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;;		_led_testing
  2163 ;;		_start_led_actions
  2164 ;;		_start_led_actions2
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           
  2169                           ;psect for function _led_on
  2170  06B4                     _led_on:
  2171                           
  2172                           ;incstack = 0
  2173                           ; Regs used in _led_on: [wreg-fsr0h+status,2+status,0]
  2174                           ;led_on@pin_number stored from wreg
  2175  06B4  00F5               	movwf	led_on@pin_number
  2176                           
  2177                           ;led.c: 134: switch( pin_number)
  2178  06B5  2EE5               	goto	l1372
  2179  06B6                     l1368:
  2180                           
  2181                           ;led.c: 138: PORTA |=(1<<RA0);
  2182  06B6  3001               	movlw	1
  2183  06B7  00F3               	movwf	??_led_on
  2184  06B8  3000               	movlw	0
  2185  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  2186  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  2187  06BB  1805               	btfsc	5,0	;volatile
  2188  06BC  3001               	movlw	1
  2189  06BD  3E01               	addlw	1
  2190  06BE  2EC1               	goto	u234
  2191  06BF                     u235:
  2192  06BF  1003               	clrc
  2193  06C0  0DF3               	rlf	??_led_on,f
  2194  06C1                     u234:
  2195  06C1  3EFF               	addlw	-1
  2196  06C2  1D03               	skipz
  2197  06C3  2EBF               	goto	u235
  2198  06C4  0873               	movf	??_led_on,w
  2199  06C5  00F4               	movwf	??_led_on+1
  2200  06C6  0874               	movf	??_led_on+1,w
  2201  06C7  0485               	iorwf	5,f	;volatile
  2202                           
  2203                           ;led.c: 141: break;
  2204  06C8  0008               	return
  2205  06C9                     l166:	
  2206                           ;led.c: 142: case 1:
  2207                           
  2208                           
  2209                           ;led.c: 144: RE0=1;
  2210  06C9  1283               	bcf	3,5	;RP0=0, select bank0
  2211  06CA  1303               	bcf	3,6	;RP1=0, select bank0
  2212  06CB  1409               	bsf	9,0	;volatile
  2213                           
  2214                           ;led.c: 146: break;
  2215  06CC  0008               	return
  2216  06CD                     l167:	
  2217                           ;led.c: 147: case 2:
  2218                           
  2219                           
  2220                           ;led.c: 149: RD0=1;
  2221  06CD  1283               	bcf	3,5	;RP0=0, select bank0
  2222  06CE  1303               	bcf	3,6	;RP1=0, select bank0
  2223  06CF  1408               	bsf	8,0	;volatile
  2224                           
  2225                           ;led.c: 151: break;
  2226  06D0  0008               	return
  2227  06D1                     l168:	
  2228                           ;led.c: 152: case 3:
  2229                           
  2230                           
  2231                           ;led.c: 154: RC3=1;
  2232  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  2233  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  2234  06D3  1587               	bsf	7,3	;volatile
  2235                           
  2236                           ;led.c: 156: break;
  2237  06D4  0008               	return
  2238  06D5                     l169:	
  2239                           ;led.c: 157: case 4:
  2240                           
  2241                           
  2242                           ;led.c: 159: RA4=1;
  2243  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  2244  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  2245  06D7  1605               	bsf	5,4	;volatile
  2246                           
  2247                           ;led.c: 161: break;
  2248  06D8  0008               	return
  2249  06D9                     l170:	
  2250                           ;led.c: 162: case 5:
  2251                           
  2252                           
  2253                           ;led.c: 164: RA5 = 1;
  2254  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  2255  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  2256  06DB  1685               	bsf	5,5	;volatile
  2257                           
  2258                           ;led.c: 166: break;
  2259  06DC  0008               	return
  2260  06DD                     l171:	
  2261                           ;led.c: 167: case 6:
  2262                           
  2263                           
  2264                           ;led.c: 169: RB0=1;
  2265  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2266  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  2267  06DF  1406               	bsf	6,0	;volatile
  2268                           
  2269                           ;led.c: 171: break;
  2270  06E0  0008               	return
  2271  06E1                     l172:	
  2272                           ;led.c: 172: case 7:
  2273                           
  2274                           
  2275                           ;led.c: 174: RB1=1;
  2276  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  2277  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  2278  06E3  1486               	bsf	6,1	;volatile
  2279                           
  2280                           ;led.c: 176: break;
  2281  06E4  0008               	return
  2282  06E5                     l1372:
  2283  06E5  0875               	movf	led_on@pin_number,w
  2284                           
  2285                           ; Switch size 1, requested type "simple"
  2286                           ; Number of cases is 8, Range of values is 0 to 7
  2287                           ; switch strategies available:
  2288                           ; Name         Instructions Cycles
  2289                           ; simple_byte           25    13 (average)
  2290                           ; direct_byte           32     8 (fixed)
  2291                           ; jumptable            260     6 (fixed)
  2292                           ;	Chosen strategy is simple_byte
  2293  06E6  3A00               	xorlw	0	; case 0
  2294  06E7  1903               	skipnz
  2295  06E8  2EB6               	goto	l1368
  2296  06E9  3A01               	xorlw	1	; case 1
  2297  06EA  1903               	skipnz
  2298  06EB  2EC9               	goto	l166
  2299  06EC  3A03               	xorlw	3	; case 2
  2300  06ED  1903               	skipnz
  2301  06EE  2ECD               	goto	l167
  2302  06EF  3A01               	xorlw	1	; case 3
  2303  06F0  1903               	skipnz
  2304  06F1  2ED1               	goto	l168
  2305  06F2  3A07               	xorlw	7	; case 4
  2306  06F3  1903               	skipnz
  2307  06F4  2ED5               	goto	l169
  2308  06F5  3A01               	xorlw	1	; case 5
  2309  06F6  1903               	skipnz
  2310  06F7  2ED9               	goto	l170
  2311  06F8  3A03               	xorlw	3	; case 6
  2312  06F9  1903               	skipnz
  2313  06FA  2EDD               	goto	l171
  2314  06FB  3A01               	xorlw	1	; case 7
  2315  06FC  1903               	skipnz
  2316  06FD  2EE1               	goto	l172
  2317  06FE  2EFF               	goto	l174
  2318  06FF                     l174:
  2319  06FF  0008               	return
  2320  0700                     __end_of_led_on:
  2321                           
  2322                           	psect	text7
  2323  02A6                     __ptext7:	
  2324 ;; *************** function _led_off *****************
  2325 ;; Defined at:
  2326 ;;		line 185 in file "led.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  pin_number      1    wreg     unsigned char 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;  pin_number      1    3[COMMON] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         0       0       0       0       0
  2341 ;;      Locals:         1       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0
  2343 ;;      Totals:         1       0       0       0       0
  2344 ;;Total ram usage:        1 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    2
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_led_testing
  2351 ;;		_start_led_actions
  2352 ;;		_start_led_actions2
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _led_off
  2358  02A6                     _led_off:
  2359                           
  2360                           ;incstack = 0
  2361                           ; Regs used in _led_off: [wreg-fsr0h+status,2+status,0]
  2362                           ;led_off@pin_number stored from wreg
  2363  02A6  00F3               	movwf	led_off@pin_number
  2364                           
  2365                           ;led.c: 187: switch(pin_number)
  2366  02A7  2AC8               	goto	l1378
  2367  02A8                     l178:	
  2368                           ;led.c: 188: {;led.c: 189: case 0:
  2369                           
  2370                           
  2371                           ;led.c: 191: RA0=0;
  2372  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  2373  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  2374  02AA  1005               	bcf	5,0	;volatile
  2375                           
  2376                           ;led.c: 193: break;
  2377  02AB  0008               	return
  2378  02AC                     l180:	
  2379                           ;led.c: 194: case 1:
  2380                           
  2381                           
  2382                           ;led.c: 196: RE0=0;
  2383  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2384  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2385  02AE  1009               	bcf	9,0	;volatile
  2386                           
  2387                           ;led.c: 197: break;
  2388  02AF  0008               	return
  2389  02B0                     l181:	
  2390                           ;led.c: 198: case 2:
  2391                           
  2392                           
  2393                           ;led.c: 200: RD0=0;
  2394  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  2395  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  2396  02B2  1008               	bcf	8,0	;volatile
  2397                           
  2398                           ;led.c: 201: break;
  2399  02B3  0008               	return
  2400  02B4                     l182:	
  2401                           ;led.c: 202: case 3:
  2402                           
  2403                           
  2404                           ;led.c: 204: RC3=0;
  2405  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  2406  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  2407  02B6  1187               	bcf	7,3	;volatile
  2408                           
  2409                           ;led.c: 205: break;
  2410  02B7  0008               	return
  2411  02B8                     l183:	
  2412                           ;led.c: 206: case 4:
  2413                           
  2414                           
  2415                           ;led.c: 208: RA4=0;
  2416  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2417  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2418  02BA  1205               	bcf	5,4	;volatile
  2419                           
  2420                           ;led.c: 210: break;
  2421  02BB  0008               	return
  2422  02BC                     l184:	
  2423                           ;led.c: 211: case 5:
  2424                           
  2425                           
  2426                           ;led.c: 213: RA5 = 0;
  2427  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  2428  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  2429  02BE  1285               	bcf	5,5	;volatile
  2430                           
  2431                           ;led.c: 214: break;
  2432  02BF  0008               	return
  2433  02C0                     l185:	
  2434                           ;led.c: 215: case 6:
  2435                           
  2436                           
  2437                           ;led.c: 217: RB0=0;
  2438  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  2439  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  2440  02C2  1006               	bcf	6,0	;volatile
  2441                           
  2442                           ;led.c: 219: break;
  2443  02C3  0008               	return
  2444  02C4                     l186:	
  2445                           ;led.c: 220: case 7:
  2446                           
  2447                           
  2448                           ;led.c: 222: RB1=0;
  2449  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2450  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2451  02C6  1086               	bcf	6,1	;volatile
  2452                           
  2453                           ;led.c: 224: break;
  2454  02C7  0008               	return
  2455  02C8                     l1378:
  2456  02C8  0873               	movf	led_off@pin_number,w
  2457                           
  2458                           ; Switch size 1, requested type "simple"
  2459                           ; Number of cases is 8, Range of values is 0 to 7
  2460                           ; switch strategies available:
  2461                           ; Name         Instructions Cycles
  2462                           ; simple_byte           25    13 (average)
  2463                           ; direct_byte           32     8 (fixed)
  2464                           ; jumptable            260     6 (fixed)
  2465                           ;	Chosen strategy is simple_byte
  2466  02C9  3A00               	xorlw	0	; case 0
  2467  02CA  1903               	skipnz
  2468  02CB  2AA8               	goto	l178
  2469  02CC  3A01               	xorlw	1	; case 1
  2470  02CD  1903               	skipnz
  2471  02CE  2AAC               	goto	l180
  2472  02CF  3A03               	xorlw	3	; case 2
  2473  02D0  1903               	skipnz
  2474  02D1  2AB0               	goto	l181
  2475  02D2  3A01               	xorlw	1	; case 3
  2476  02D3  1903               	skipnz
  2477  02D4  2AB4               	goto	l182
  2478  02D5  3A07               	xorlw	7	; case 4
  2479  02D6  1903               	skipnz
  2480  02D7  2AB8               	goto	l183
  2481  02D8  3A01               	xorlw	1	; case 5
  2482  02D9  1903               	skipnz
  2483  02DA  2ABC               	goto	l184
  2484  02DB  3A03               	xorlw	3	; case 6
  2485  02DC  1903               	skipnz
  2486  02DD  2AC0               	goto	l185
  2487  02DE  3A01               	xorlw	1	; case 7
  2488  02DF  1903               	skipnz
  2489  02E0  2AC4               	goto	l186
  2490  02E1  2AE2               	goto	l188
  2491  02E2                     l188:
  2492  02E2  0008               	return
  2493  02E3                     __end_of_led_off:
  2494                           
  2495                           	psect	text8
  2496  041C                     __ptext8:	
  2497 ;; *************** function _screen_saver *****************
  2498 ;; Defined at:
  2499 ;;		line 336 in file "main.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;		None
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  i               2   14[BANK0 ] int 
  2504 ;;  i               2   12[BANK0 ] int 
  2505 ;;  i               2   10[BANK0 ] int 
  2506 ;;  i               2    8[BANK0 ] int 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2516 ;;      Params:         0       0       0       0       0
  2517 ;;      Locals:         0       8       0       0       0
  2518 ;;      Temps:          0       3       0       0       0
  2519 ;;      Totals:         0      11       0       0       0
  2520 ;;Total ram usage:       11 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    5
  2523 ;; This function calls:
  2524 ;;		_LCD_Clear
  2525 ;;		_LCD_SL
  2526 ;;		_LCD_SR
  2527 ;;		_LCD_Set_Cursor
  2528 ;;		_LCD_Write_String
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function _screen_saver
  2536  041C                     _screen_saver:
  2537                           
  2538                           ;main.c: 338: LCD_Clear();
  2539                           
  2540                           ;incstack = 0
  2541                           ; Regs used in _screen_saver: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2542  041C  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  2543                           
  2544                           ;main.c: 339: LCD_Set_Cursor(1,1);
  2545  0421  01F6               	clrf	LCD_Set_Cursor@c
  2546  0422  0AF6               	incf	LCD_Set_Cursor@c,f
  2547  0423  3001               	movlw	1
  2548  0424  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  2549                           
  2550                           ;main.c: 340: LCD_Write_String(" Ready ");
  2551  0429  3014               	movlw	low (STR_11| (0+32768))
  2552  042A  00F8               	movwf	LCD_Write_String@str
  2553  042B  3084               	movlw	high (STR_11| (0+32768))
  2554  042C  00F9               	movwf	LCD_Write_String@str+1
  2555  042D  120A  118A  2790  120A  118A  	fcall	_LCD_Write_String
  2556                           
  2557                           ;main.c: 342: for(int i=0;i<9;i++)
  2558  0432  01A8               	clrf	screen_saver@i
  2559  0433  01A9               	clrf	screen_saver@i+1
  2560  0434                     l1758:
  2561                           
  2562                           ;main.c: 343: {;main.c: 344: LCD_SR();
  2563  0434  120A  118A  22F5  120A  118A  	fcall	_LCD_SR
  2564                           
  2565                           ;main.c: 345: _delay((unsigned long)((150)*(8000000/4000.0)));
  2566  0439  3002               	movlw	2
  2567  043A  1283               	bcf	3,5	;RP0=0, select bank0
  2568  043B  1303               	bcf	3,6	;RP1=0, select bank0
  2569  043C  00A7               	movwf	??_screen_saver+2
  2570  043D  3086               	movlw	134
  2571  043E  00A6               	movwf	??_screen_saver+1
  2572  043F  3098               	movlw	152
  2573  0440  00A5               	movwf	??_screen_saver
  2574  0441                     u597:
  2575  0441  0BA5               	decfsz	??_screen_saver,f
  2576  0442  2C41               	goto	u597
  2577  0443  0BA6               	decfsz	??_screen_saver+1,f
  2578  0444  2C41               	goto	u597
  2579  0445  0BA7               	decfsz	??_screen_saver+2,f
  2580  0446  2C41               	goto	u597
  2581  0447  0000               	nop
  2582  0448  3001               	movlw	1
  2583  0449  1283               	bcf	3,5	;RP0=0, select bank0
  2584  044A  1303               	bcf	3,6	;RP1=0, select bank0
  2585  044B  07A8               	addwf	screen_saver@i,f
  2586  044C  1803               	skipnc
  2587  044D  0AA9               	incf	screen_saver@i+1,f
  2588  044E  3000               	movlw	0
  2589  044F  07A9               	addwf	screen_saver@i+1,f
  2590  0450  0829               	movf	screen_saver@i+1,w
  2591  0451  3A80               	xorlw	128
  2592  0452  00FF               	movwf	127
  2593  0453  3080               	movlw	128
  2594  0454  027F               	subwf	127,w
  2595  0455  1D03               	skipz
  2596  0456  2C59               	goto	u375
  2597  0457  3009               	movlw	9
  2598  0458  0228               	subwf	screen_saver@i,w
  2599  0459                     u375:
  2600  0459  1C03               	skipc
  2601  045A  2C34               	goto	l1758
  2602                           
  2603                           ;main.c: 346: };main.c: 347: for(int i=0;i<9;i++)
  2604  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2605  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2606  045D  01AA               	clrf	screen_saver@i_136
  2607  045E  01AB               	clrf	screen_saver@i_136+1
  2608  045F                     l1772:
  2609                           
  2610                           ;main.c: 348: {;main.c: 349: LCD_SL();
  2611  045F  120A  158A  27A3  120A  118A  	fcall	_LCD_SL
  2612                           
  2613                           ;main.c: 350: _delay((unsigned long)((150)*(8000000/4000.0)));
  2614  0464  3002               	movlw	2
  2615  0465  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0466  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0467  00A7               	movwf	??_screen_saver+2
  2618  0468  3086               	movlw	134
  2619  0469  00A6               	movwf	??_screen_saver+1
  2620  046A  3098               	movlw	152
  2621  046B  00A5               	movwf	??_screen_saver
  2622  046C                     u607:
  2623  046C  0BA5               	decfsz	??_screen_saver,f
  2624  046D  2C6C               	goto	u607
  2625  046E  0BA6               	decfsz	??_screen_saver+1,f
  2626  046F  2C6C               	goto	u607
  2627  0470  0BA7               	decfsz	??_screen_saver+2,f
  2628  0471  2C6C               	goto	u607
  2629  0472  0000               	nop
  2630  0473  3001               	movlw	1
  2631  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2632  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2633  0476  07AA               	addwf	screen_saver@i_136,f
  2634  0477  1803               	skipnc
  2635  0478  0AAB               	incf	screen_saver@i_136+1,f
  2636  0479  3000               	movlw	0
  2637  047A  07AB               	addwf	screen_saver@i_136+1,f
  2638  047B  082B               	movf	screen_saver@i_136+1,w
  2639  047C  3A80               	xorlw	128
  2640  047D  00FF               	movwf	127
  2641  047E  3080               	movlw	128
  2642  047F  027F               	subwf	127,w
  2643  0480  1D03               	skipz
  2644  0481  2C84               	goto	u385
  2645  0482  3009               	movlw	9
  2646  0483  022A               	subwf	screen_saver@i_136,w
  2647  0484                     u385:
  2648  0484  1C03               	skipc
  2649  0485  2C5F               	goto	l1772
  2650                           
  2651                           ;main.c: 351: };main.c: 353: LCD_Clear();
  2652  0486  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  2653                           
  2654                           ;main.c: 354: LCD_Write_String("                       ");
  2655  048B  3048               	movlw	low (STR_12| (0+32768))
  2656  048C  00F8               	movwf	LCD_Write_String@str
  2657  048D  3083               	movlw	high (STR_12| (0+32768))
  2658  048E  00F9               	movwf	LCD_Write_String@str+1
  2659  048F  120A  118A  2790  120A  118A  	fcall	_LCD_Write_String
  2660                           
  2661                           ;main.c: 355: LCD_Set_Cursor(2,1);
  2662  0494  01F6               	clrf	LCD_Set_Cursor@c
  2663  0495  0AF6               	incf	LCD_Set_Cursor@c,f
  2664  0496  3002               	movlw	2
  2665  0497  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  2666                           
  2667                           ;main.c: 356: LCD_Write_String(" Ready ");
  2668  049C  3014               	movlw	low (STR_11| (0+32768))
  2669  049D  00F8               	movwf	LCD_Write_String@str
  2670  049E  3084               	movlw	high (STR_11| (0+32768))
  2671  049F  00F9               	movwf	LCD_Write_String@str+1
  2672  04A0  120A  118A  2790  120A  118A  	fcall	_LCD_Write_String
  2673                           
  2674                           ;main.c: 357: for(int i=0;i<9;i++)
  2675  04A5  01AC               	clrf	screen_saver@i_139
  2676  04A6  01AD               	clrf	screen_saver@i_139+1
  2677  04A7                     l1792:
  2678                           
  2679                           ;main.c: 358: {;main.c: 359: LCD_SR();
  2680  04A7  120A  118A  22F5  120A  118A  	fcall	_LCD_SR
  2681                           
  2682                           ;main.c: 360: _delay((unsigned long)((80)*(8000000/4000.0)));
  2683  04AC  30D0               	movlw	208
  2684  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  2685  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  2686  04AF  00A6               	movwf	??_screen_saver+1
  2687  04B0  30C9               	movlw	201
  2688  04B1  00A5               	movwf	??_screen_saver
  2689  04B2                     u617:
  2690  04B2  0BA5               	decfsz	??_screen_saver,f
  2691  04B3  2CB2               	goto	u617
  2692  04B4  0BA6               	decfsz	??_screen_saver+1,f
  2693  04B5  2CB2               	goto	u617
  2694  04B6  3001               	movlw	1
  2695  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  2696  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  2697  04B9  07AC               	addwf	screen_saver@i_139,f
  2698  04BA  1803               	skipnc
  2699  04BB  0AAD               	incf	screen_saver@i_139+1,f
  2700  04BC  3000               	movlw	0
  2701  04BD  07AD               	addwf	screen_saver@i_139+1,f
  2702  04BE  082D               	movf	screen_saver@i_139+1,w
  2703  04BF  3A80               	xorlw	128
  2704  04C0  00FF               	movwf	127
  2705  04C1  3080               	movlw	128
  2706  04C2  027F               	subwf	127,w
  2707  04C3  1D03               	skipz
  2708  04C4  2CC7               	goto	u395
  2709  04C5  3009               	movlw	9
  2710  04C6  022C               	subwf	screen_saver@i_139,w
  2711  04C7                     u395:
  2712  04C7  1C03               	skipc
  2713  04C8  2CA7               	goto	l1792
  2714                           
  2715                           ;main.c: 361: };main.c: 362: for(int i=0;i<9;i++)
  2716  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  2717  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  2718  04CB  01AE               	clrf	screen_saver@i_140
  2719  04CC  01AF               	clrf	screen_saver@i_140+1
  2720  04CD                     l1806:
  2721                           
  2722                           ;main.c: 363: {;main.c: 364: LCD_SL();
  2723  04CD  120A  158A  27A3  120A  118A  	fcall	_LCD_SL
  2724                           
  2725                           ;main.c: 365: _delay((unsigned long)((80)*(8000000/4000.0)));
  2726  04D2  30D0               	movlw	208
  2727  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  2728  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  2729  04D5  00A6               	movwf	??_screen_saver+1
  2730  04D6  30C9               	movlw	201
  2731  04D7  00A5               	movwf	??_screen_saver
  2732  04D8                     u627:
  2733  04D8  0BA5               	decfsz	??_screen_saver,f
  2734  04D9  2CD8               	goto	u627
  2735  04DA  0BA6               	decfsz	??_screen_saver+1,f
  2736  04DB  2CD8               	goto	u627
  2737  04DC  3001               	movlw	1
  2738  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2739  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2740  04DF  07AE               	addwf	screen_saver@i_140,f
  2741  04E0  1803               	skipnc
  2742  04E1  0AAF               	incf	screen_saver@i_140+1,f
  2743  04E2  3000               	movlw	0
  2744  04E3  07AF               	addwf	screen_saver@i_140+1,f
  2745  04E4  082F               	movf	screen_saver@i_140+1,w
  2746  04E5  3A80               	xorlw	128
  2747  04E6  00FF               	movwf	127
  2748  04E7  3080               	movlw	128
  2749  04E8  027F               	subwf	127,w
  2750  04E9  1D03               	skipz
  2751  04EA  2CED               	goto	u405
  2752  04EB  3009               	movlw	9
  2753  04EC  022E               	subwf	screen_saver@i_140,w
  2754  04ED                     u405:
  2755  04ED  1803               	btfsc	3,0
  2756  04EE  0008               	return
  2757  04EF  2CCD               	goto	l1806
  2758  04F0                     __end_of_screen_saver:
  2759                           
  2760                           	psect	text9
  2761  02F5                     __ptext9:	
  2762 ;; *************** function _LCD_SR *****************
  2763 ;; Defined at:
  2764 ;;		line 127 in file "lcd.c"
  2765 ;; Parameters:    Size  Location     Type
  2766 ;;		None
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;		None
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  1    wreg      void 
  2771 ;; Registers used:
  2772 ;;		wreg, status,2, status,0, pclath, cstack
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 300/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2778 ;;      Params:         0       0       0       0       0
  2779 ;;      Locals:         0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0
  2781 ;;      Totals:         0       0       0       0       0
  2782 ;;Total ram usage:        0 bytes
  2783 ;; Hardware stack levels used:    1
  2784 ;; Hardware stack levels required when called:    4
  2785 ;; This function calls:
  2786 ;;		_LCD_CMD
  2787 ;; This function is called by:
  2788 ;;		_screen_saver
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           
  2793                           ;psect for function _LCD_SR
  2794  02F5                     _LCD_SR:
  2795                           
  2796                           ;lcd.c: 129: LCD_CMD(0x01);
  2797                           
  2798                           ;incstack = 0
  2799                           ; Regs used in _LCD_SR: [wreg+status,2+status,0+pclath+cstack]
  2800  02F5  3001               	movlw	1
  2801  02F6  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  2802                           
  2803                           ;lcd.c: 130: LCD_CMD(0x0C);
  2804  02FB  300C               	movlw	12
  2805  02FC  120A  118A  27E9   	fcall	_LCD_CMD
  2806  02FF  0008               	return
  2807  0300                     __end_of_LCD_SR:
  2808                           
  2809                           	psect	text10
  2810  04F0                     __ptext10:	
  2811 ;; *************** function _instruction_screen *****************
  2812 ;; Defined at:
  2813 ;;		line 371 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  i               2   10[BANK0 ] int 
  2818 ;;  i               2    8[BANK0 ] int 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         0       4       0       0       0
  2830 ;;      Temps:          0       3       0       0       0
  2831 ;;      Totals:         0       7       0       0       0
  2832 ;;Total ram usage:        7 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    5
  2835 ;; This function calls:
  2836 ;;		_LCD_Clear
  2837 ;;		_LCD_SL
  2838 ;;		_LCD_Set_Cursor
  2839 ;;		_LCD_Write_String
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _instruction_screen
  2847  04F0                     _instruction_screen:
  2848                           
  2849                           ;main.c: 373: LCD_Clear();
  2850                           
  2851                           ;incstack = 0
  2852                           ; Regs used in _instruction_screen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2853  04F0  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  2854                           
  2855                           ;main.c: 374: LCD_Set_Cursor(1,1);
  2856  04F5  01F6               	clrf	LCD_Set_Cursor@c
  2857  04F6  0AF6               	incf	LCD_Set_Cursor@c,f
  2858  04F7  3001               	movlw	1
  2859  04F8  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  2860                           
  2861                           ;main.c: 375: LCD_Write_String("__INSTRUCTIONS__  ");
  2862  04FD  3060               	movlw	low (STR_14| (0+32768))
  2863  04FE  00F8               	movwf	LCD_Write_String@str
  2864  04FF  3083               	movlw	high (STR_14| (0+32768))
  2865  0500  00F9               	movwf	LCD_Write_String@str+1
  2866  0501  120A  118A  2790  120A  118A  	fcall	_LCD_Write_String
  2867                           
  2868                           ;main.c: 376: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2869  0506  300B               	movlw	11
  2870  0507  1283               	bcf	3,5	;RP0=0, select bank0
  2871  0508  1303               	bcf	3,6	;RP1=0, select bank0
  2872  0509  00A7               	movwf	??_instruction_screen+2
  2873  050A  3026               	movlw	38
  2874  050B  00A6               	movwf	??_instruction_screen+1
  2875  050C  305D               	movlw	93
  2876  050D  00A5               	movwf	??_instruction_screen
  2877  050E                     u637:
  2878  050E  0BA5               	decfsz	??_instruction_screen,f
  2879  050F  2D0E               	goto	u637
  2880  0510  0BA6               	decfsz	??_instruction_screen+1,f
  2881  0511  2D0E               	goto	u637
  2882  0512  0BA7               	decfsz	??_instruction_screen+2,f
  2883  0513  2D0E               	goto	u637
  2884                           
  2885                           ;main.c: 378: LCD_Clear();
  2886  0514  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  2887                           
  2888                           ;main.c: 379: LCD_Set_Cursor(1,1);
  2889  0519  01F6               	clrf	LCD_Set_Cursor@c
  2890  051A  0AF6               	incf	LCD_Set_Cursor@c,f
  2891  051B  3001               	movlw	1
  2892  051C  120A  118A  2700  120A  118A  	fcall	_LCD_Set_Cursor
  2893                           
  2894                           ;main.c: 380: LCD_Write_String(" connect your device using bluetooth ");
  2895  0521  3000               	movlw	low (STR_15| (0+32768))
  2896  0522  00F8               	movwf	LCD_Write_String@str
  2897  0523  3083               	movlw	high (STR_15| (0+32768))
  2898  0524  00F9               	movwf	LCD_Write_String@str+1
  2899  0525  120A  118A  2790  120A  118A  	fcall	_LCD_Write_String
  2900                           
  2901                           ;main.c: 381: _delay((unsigned long)((500)*(8000000/4000.0)));
  2902  052A  3006               	movlw	6
  2903  052B  1283               	bcf	3,5	;RP0=0, select bank0
  2904  052C  1303               	bcf	3,6	;RP1=0, select bank0
  2905  052D  00A7               	movwf	??_instruction_screen+2
  2906  052E  3013               	movlw	19
  2907  052F  00A6               	movwf	??_instruction_screen+1
  2908  0530  30AD               	movlw	173
  2909  0531  00A5               	movwf	??_instruction_screen
  2910  0532                     u647:
  2911  0532  0BA5               	decfsz	??_instruction_screen,f
  2912  0533  2D32               	goto	u647
  2913  0534  0BA6               	decfsz	??_instruction_screen+1,f
  2914  0535  2D32               	goto	u647
  2915  0536  0BA7               	decfsz	??_instruction_screen+2,f
  2916  0537  2D32               	goto	u647
  2917                           
  2918                           ;main.c: 382: for(int i=0;i<20;i++)
  2919  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2921  053A  01A8               	clrf	instruction_screen@i
  2922  053B  01A9               	clrf	instruction_screen@i+1
  2923  053C                     l1834:
  2924                           
  2925                           ;main.c: 383: {;main.c: 384: LCD_SL();
  2926  053C  120A  158A  27A3  120A  118A  	fcall	_LCD_SL
  2927                           
  2928                           ;main.c: 385: _delay((unsigned long)((500)*(8000000/4000.0)));
  2929  0541  3006               	movlw	6
  2930  0542  1283               	bcf	3,5	;RP0=0, select bank0
  2931  0543  1303               	bcf	3,6	;RP1=0, select bank0
  2932  0544  00A7               	movwf	??_instruction_screen+2
  2933  0545  3013               	movlw	19
  2934  0546  00A6               	movwf	??_instruction_screen+1
  2935  0547  30AD               	movlw	173
  2936  0548  00A5               	movwf	??_instruction_screen
  2937  0549                     u657:
  2938  0549  0BA5               	decfsz	??_instruction_screen,f
  2939  054A  2D49               	goto	u657
  2940  054B  0BA6               	decfsz	??_instruction_screen+1,f
  2941  054C  2D49               	goto	u657
  2942  054D  0BA7               	decfsz	??_instruction_screen+2,f
  2943  054E  2D49               	goto	u657
  2944  054F  3001               	movlw	1
  2945  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2946  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2947  0552  07A8               	addwf	instruction_screen@i,f
  2948  0553  1803               	skipnc
  2949  0554  0AA9               	incf	instruction_screen@i+1,f
  2950  0555  3000               	movlw	0
  2951  0556  07A9               	addwf	instruction_screen@i+1,f
  2952  0557  0829               	movf	instruction_screen@i+1,w
  2953  0558  3A80               	xorlw	128
  2954  0559  00FF               	movwf	127
  2955  055A  3080               	movlw	128
  2956  055B  027F               	subwf	127,w
  2957  055C  1D03               	skipz
  2958  055D  2D60               	goto	u415
  2959  055E  3014               	movlw	20
  2960  055F  0228               	subwf	instruction_screen@i,w
  2961  0560                     u415:
  2962  0560  1C03               	skipc
  2963  0561  2D3C               	goto	l1834
  2964                           
  2965                           ;main.c: 386: };main.c: 389: LCD_Clear();
  2966  0562  120A  158A  2798  120A  118A  	fcall	_LCD_Clear
  2967                           
  2968                           ;main.c: 390: LCD_Write_String(" to hc05 and enjoy controlling...");
  2969  0567  3026               	movlw	low (STR_16| (0+32768))
  2970  0568  00F8               	movwf	LCD_Write_String@str
  2971  0569  3083               	movlw	high (STR_16| (0+32768))
  2972  056A  00F9               	movwf	LCD_Write_String@str+1
  2973  056B  120A  118A  2790  120A  118A  	fcall	_LCD_Write_String
  2974                           
  2975                           ;main.c: 391: _delay((unsigned long)((800)*(8000000/4000.0)));
  2976  0570  3009               	movlw	9
  2977  0571  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0572  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0573  00A7               	movwf	??_instruction_screen+2
  2980  0574  301E               	movlw	30
  2981  0575  00A6               	movwf	??_instruction_screen+1
  2982  0576  30E3               	movlw	227
  2983  0577  00A5               	movwf	??_instruction_screen
  2984  0578                     u667:
  2985  0578  0BA5               	decfsz	??_instruction_screen,f
  2986  0579  2D78               	goto	u667
  2987  057A  0BA6               	decfsz	??_instruction_screen+1,f
  2988  057B  2D78               	goto	u667
  2989  057C  0BA7               	decfsz	??_instruction_screen+2,f
  2990  057D  2D78               	goto	u667
  2991  057E  2D7F               	nop2
  2992                           
  2993                           ;main.c: 392: for(int i=0;i<20;i++)
  2994  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0581  01AA               	clrf	instruction_screen@i_146
  2997  0582  01AB               	clrf	instruction_screen@i_146+1
  2998  0583                     l1854:
  2999                           
  3000                           ;main.c: 393: {;main.c: 394: LCD_SL();
  3001  0583  120A  158A  27A3  120A  118A  	fcall	_LCD_SL
  3002                           
  3003                           ;main.c: 395: _delay((unsigned long)((500)*(8000000/4000.0)));
  3004  0588  3006               	movlw	6
  3005  0589  1283               	bcf	3,5	;RP0=0, select bank0
  3006  058A  1303               	bcf	3,6	;RP1=0, select bank0
  3007  058B  00A7               	movwf	??_instruction_screen+2
  3008  058C  3013               	movlw	19
  3009  058D  00A6               	movwf	??_instruction_screen+1
  3010  058E  30AD               	movlw	173
  3011  058F  00A5               	movwf	??_instruction_screen
  3012  0590                     u677:
  3013  0590  0BA5               	decfsz	??_instruction_screen,f
  3014  0591  2D90               	goto	u677
  3015  0592  0BA6               	decfsz	??_instruction_screen+1,f
  3016  0593  2D90               	goto	u677
  3017  0594  0BA7               	decfsz	??_instruction_screen+2,f
  3018  0595  2D90               	goto	u677
  3019  0596  3001               	movlw	1
  3020  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3021  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3022  0599  07AA               	addwf	instruction_screen@i_146,f
  3023  059A  1803               	skipnc
  3024  059B  0AAB               	incf	instruction_screen@i_146+1,f
  3025  059C  3000               	movlw	0
  3026  059D  07AB               	addwf	instruction_screen@i_146+1,f
  3027  059E  082B               	movf	instruction_screen@i_146+1,w
  3028  059F  3A80               	xorlw	128
  3029  05A0  00FF               	movwf	127
  3030  05A1  3080               	movlw	128
  3031  05A2  027F               	subwf	127,w
  3032  05A3  1D03               	skipz
  3033  05A4  2DA7               	goto	u425
  3034  05A5  3014               	movlw	20
  3035  05A6  022A               	subwf	instruction_screen@i_146,w
  3036  05A7                     u425:
  3037  05A7  1803               	btfsc	3,0
  3038  05A8  0008               	return
  3039  05A9  2D83               	goto	l1854
  3040  05AA                     __end_of_instruction_screen:
  3041                           
  3042                           	psect	text11
  3043  0790                     __ptext11:	
  3044 ;; *************** function _LCD_Write_String *****************
  3045 ;; Defined at:
  3046 ;;		line 114 in file "lcd.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;  str             2    8[COMMON] PTR unsigned char 
  3049 ;;		 -> STR_16(34), STR_15(38), STR_14(19), STR_13(8), 
  3050 ;;		 -> STR_12(24), STR_11(8), STR_10(17), STR_9(18), 
  3051 ;;		 -> STR_8(17), STR_7(15), STR_6(16), STR_5(16), 
  3052 ;;		 -> STR_4(17), STR_3(16), STR_2(14), STR_1(15), 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;  i               2    3[BANK0 ] int 
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 300/0
  3061 ;;		On exit  : 300/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3064 ;;      Params:         2       0       0       0       0
  3065 ;;      Locals:         0       2       0       0       0
  3066 ;;      Temps:          0       3       0       0       0
  3067 ;;      Totals:         2       5       0       0       0
  3068 ;;Total ram usage:        7 bytes
  3069 ;; Hardware stack levels used:    1
  3070 ;; Hardware stack levels required when called:    4
  3071 ;; This function calls:
  3072 ;;		_LCD_Write_Char
  3073 ;; This function is called by:
  3074 ;;		_start_led_actions
  3075 ;;		_screen_saver
  3076 ;;		_instruction_screen
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _LCD_Write_String
  3082  0790                     _LCD_Write_String:
  3083                           
  3084                           ;lcd.c: 116: int i;;lcd.c: 117: for(i=0;str[i]!='\0';i++)
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _LCD_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3088  0790  01A3               	clrf	LCD_Write_String@i
  3089  0791  01A4               	clrf	LCD_Write_String@i+1
  3090  0792                     l1544:
  3091  0792  0823               	movf	LCD_Write_String@i,w
  3092  0793  0778               	addwf	LCD_Write_String@str,w
  3093  0794  00A1               	movwf	??_LCD_Write_String+1
  3094  0795  0879               	movf	LCD_Write_String@str+1,w
  3095  0796  00A0               	movwf	??_LCD_Write_String
  3096  0797  1803               	skipnc
  3097  0798  0AA0               	incf	??_LCD_Write_String,f
  3098  0799  1BA3               	btfsc	LCD_Write_String@i,7
  3099  079A  03A0               	decf	??_LCD_Write_String,f
  3100  079B  1283               	bcf	3,5	;RP0=0, select bank0
  3101  079C  1303               	bcf	3,6	;RP1=0, select bank0
  3102  079D  0820               	movf	??_LCD_Write_String,w
  3103  079E  00A2               	movwf	??_LCD_Write_String+2
  3104  079F  0822               	movf	??_LCD_Write_String+2,w
  3105  07A0  00FF               	movwf	127
  3106  07A1  0821               	movf	??_LCD_Write_String+1,w
  3107  07A2  0084               	movwf	4
  3108  07A3  120A  118A  22E3  120A  118A  	fcall	stringtab
  3109  07A8  3A00               	xorlw	0
  3110  07A9  1903               	btfsc	3,2
  3111  07AA  0008               	return
  3112                           
  3113                           ;lcd.c: 118: LCD_Write_Char(str[i]);
  3114  07AB  0823               	movf	LCD_Write_String@i,w
  3115  07AC  0778               	addwf	LCD_Write_String@str,w
  3116  07AD  00A1               	movwf	??_LCD_Write_String+1
  3117  07AE  0879               	movf	LCD_Write_String@str+1,w
  3118  07AF  00A0               	movwf	??_LCD_Write_String
  3119  07B0  1803               	skipnc
  3120  07B1  0AA0               	incf	??_LCD_Write_String,f
  3121  07B2  1BA3               	btfsc	LCD_Write_String@i,7
  3122  07B3  03A0               	decf	??_LCD_Write_String,f
  3123  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  3124  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  3125  07B6  0820               	movf	??_LCD_Write_String,w
  3126  07B7  00A2               	movwf	??_LCD_Write_String+2
  3127  07B8  0822               	movf	??_LCD_Write_String+2,w
  3128  07B9  00FF               	movwf	127
  3129  07BA  0821               	movf	??_LCD_Write_String+1,w
  3130  07BB  0084               	movwf	4
  3131  07BC  120A  118A  22E3  120A  118A  	fcall	stringtab
  3132  07C1  120A  118A  274B  120A  118A  	fcall	_LCD_Write_Char
  3133  07C6  3001               	movlw	1
  3134  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  3135  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  3136  07C9  07A3               	addwf	LCD_Write_String@i,f
  3137  07CA  1803               	skipnc
  3138  07CB  0AA4               	incf	LCD_Write_String@i+1,f
  3139  07CC  3000               	movlw	0
  3140  07CD  07A4               	addwf	LCD_Write_String@i+1,f
  3141  07CE  2F92               	goto	l1544
  3142  07CF                     __end_of_LCD_Write_String:
  3143                           
  3144                           	psect	text12
  3145  074B                     __ptext12:	
  3146 ;; *************** function _LCD_Write_Char *****************
  3147 ;; Defined at:
  3148 ;;		line 96 in file "lcd.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  Data            1    wreg     unsigned char 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  Data            1    7[COMMON] unsigned char 
  3153 ;;  High4           1    6[COMMON] unsigned char 
  3154 ;;  Low4            1    5[COMMON] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, pclath, cstack
  3159 ;; Tracked objects:
  3160 ;;		On entry : 300/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3164 ;;      Params:         0       0       0       0       0
  3165 ;;      Locals:         3       0       0       0       0
  3166 ;;      Temps:          1       0       0       0       0
  3167 ;;      Totals:         4       0       0       0       0
  3168 ;;Total ram usage:        4 bytes
  3169 ;; Hardware stack levels used:    1
  3170 ;; Hardware stack levels required when called:    3
  3171 ;; This function calls:
  3172 ;;		_LCD_DATA
  3173 ;; This function is called by:
  3174 ;;		_LCD_Write_String
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function _LCD_Write_Char
  3180  074B                     _LCD_Write_Char:
  3181                           
  3182                           ;incstack = 0
  3183                           ; Regs used in _LCD_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3184                           ;LCD_Write_Char@Data stored from wreg
  3185  074B  00F7               	movwf	LCD_Write_Char@Data
  3186                           
  3187                           ;lcd.c: 98: char Low4,High4;;lcd.c: 99: Low4 = Data & 0x0F;
  3188  074C  0877               	movf	LCD_Write_Char@Data,w
  3189  074D  390F               	andlw	15
  3190  074E  00F4               	movwf	??_LCD_Write_Char
  3191  074F  0874               	movf	??_LCD_Write_Char,w
  3192  0750  00F5               	movwf	LCD_Write_Char@Low4
  3193                           
  3194                           ;lcd.c: 100: High4 = Data & 0xF0;
  3195  0751  0877               	movf	LCD_Write_Char@Data,w
  3196  0752  39F0               	andlw	240
  3197  0753  00F4               	movwf	??_LCD_Write_Char
  3198  0754  0874               	movf	??_LCD_Write_Char,w
  3199  0755  00F6               	movwf	LCD_Write_Char@High4
  3200                           
  3201                           ;lcd.c: 101: RC0 = 1;
  3202  0756  1407               	bsf	7,0	;volatile
  3203                           
  3204                           ;lcd.c: 102: LCD_DATA(High4>>4);
  3205  0757  0876               	movf	LCD_Write_Char@High4,w
  3206  0758  00F4               	movwf	??_LCD_Write_Char
  3207  0759  3004               	movlw	4
  3208  075A                     u285:
  3209  075A  1003               	clrc
  3210  075B  0CF4               	rrf	??_LCD_Write_Char,f
  3211  075C  3EFF               	addlw	-1
  3212  075D  1D03               	skipz
  3213  075E  2F5A               	goto	u285
  3214  075F  0874               	movf	??_LCD_Write_Char,w
  3215  0760  120A  118A  27CF  120A  118A  	fcall	_LCD_DATA
  3216                           
  3217                           ;lcd.c: 103: RC2 = 1;
  3218  0765  1507               	bsf	7,2	;volatile
  3219                           
  3220                           ;lcd.c: 104: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3221  0766  30C7               	movlw	199
  3222  0767  00F4               	movwf	??_LCD_Write_Char
  3223  0768                     u687:
  3224  0768  2F69               	nop2
  3225  0769  0BF4               	decfsz	??_LCD_Write_Char,f
  3226  076A  2F68               	goto	u687
  3227  076B  2F6C               	nop2
  3228  076C  2F6D               	nop2
  3229                           
  3230                           ;lcd.c: 105: RC2 = 0;
  3231  076D  1283               	bcf	3,5	;RP0=0, select bank0
  3232  076E  1303               	bcf	3,6	;RP1=0, select bank0
  3233  076F  1107               	bcf	7,2	;volatile
  3234                           
  3235                           ;lcd.c: 106: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3236  0770  30C7               	movlw	199
  3237  0771  00F4               	movwf	??_LCD_Write_Char
  3238  0772                     u697:
  3239  0772  2F73               	nop2
  3240  0773  0BF4               	decfsz	??_LCD_Write_Char,f
  3241  0774  2F72               	goto	u697
  3242  0775  2F76               	nop2
  3243  0776  2F77               	nop2
  3244                           
  3245                           ;lcd.c: 107: LCD_DATA(Low4);
  3246  0777  0875               	movf	LCD_Write_Char@Low4,w
  3247  0778  120A  118A  27CF  120A  118A  	fcall	_LCD_DATA
  3248                           
  3249                           ;lcd.c: 108: RC2 = 1;
  3250  077D  1507               	bsf	7,2	;volatile
  3251                           
  3252                           ;lcd.c: 109: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3253  077E  30C7               	movlw	199
  3254  077F  00F4               	movwf	??_LCD_Write_Char
  3255  0780                     u707:
  3256  0780  2F81               	nop2
  3257  0781  0BF4               	decfsz	??_LCD_Write_Char,f
  3258  0782  2F80               	goto	u707
  3259  0783  2F84               	nop2
  3260  0784  2F85               	nop2
  3261                           
  3262                           ;lcd.c: 110: RC2 = 0;
  3263  0785  1283               	bcf	3,5	;RP0=0, select bank0
  3264  0786  1303               	bcf	3,6	;RP1=0, select bank0
  3265  0787  1107               	bcf	7,2	;volatile
  3266                           
  3267                           ;lcd.c: 111: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3268  0788  30C7               	movlw	199
  3269  0789  00F4               	movwf	??_LCD_Write_Char
  3270  078A                     u717:
  3271  078A  2F8B               	nop2
  3272  078B  0BF4               	decfsz	??_LCD_Write_Char,f
  3273  078C  2F8A               	goto	u717
  3274  078D  2F8E               	nop2
  3275  078E  2F8F               	nop2
  3276  078F  0008               	return
  3277  0790                     __end_of_LCD_Write_Char:
  3278                           
  3279                           	psect	text13
  3280  0700                     __ptext13:	
  3281 ;; *************** function _LCD_Set_Cursor *****************
  3282 ;; Defined at:
  3283 ;;		line 75 in file "lcd.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  r               1    wreg     unsigned char 
  3286 ;;  c               1    6[COMMON] unsigned char 
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;  r               1    0[BANK0 ] unsigned char 
  3289 ;;  Temp            1    3[BANK0 ] unsigned char 
  3290 ;;  High4           1    2[BANK0 ] unsigned char 
  3291 ;;  Low4            1    1[BANK0 ] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, pclath, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 300/0
  3298 ;;		On exit  : 300/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3301 ;;      Params:         1       0       0       0       0
  3302 ;;      Locals:         0       4       0       0       0
  3303 ;;      Temps:          2       0       0       0       0
  3304 ;;      Totals:         3       4       0       0       0
  3305 ;;Total ram usage:        7 bytes
  3306 ;; Hardware stack levels used:    1
  3307 ;; Hardware stack levels required when called:    4
  3308 ;; This function calls:
  3309 ;;		_LCD_CMD
  3310 ;; This function is called by:
  3311 ;;		_main
  3312 ;;		_start_led_actions
  3313 ;;		_screen_saver
  3314 ;;		_instruction_screen
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           
  3319                           ;psect for function _LCD_Set_Cursor
  3320  0700                     _LCD_Set_Cursor:
  3321                           
  3322                           ;incstack = 0
  3323                           ; Regs used in _LCD_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3324                           ;LCD_Set_Cursor@r stored from wreg
  3325  0700  00A0               	movwf	LCD_Set_Cursor@r
  3326                           
  3327                           ;lcd.c: 77: unsigned char Temp,Low4,High4;;lcd.c: 78: if(r == 1)
  3328  0701  0320               	decf	LCD_Set_Cursor@r,w
  3329  0702  1D03               	btfss	3,2
  3330  0703  2F26               	goto	l1460
  3331                           
  3332                           ;lcd.c: 79: {;lcd.c: 80: Temp = 0x80 + c - 1;
  3333  0704  0876               	movf	LCD_Set_Cursor@c,w
  3334  0705  3E7F               	addlw	127
  3335  0706  00F7               	movwf	??_LCD_Set_Cursor
  3336  0707  0877               	movf	??_LCD_Set_Cursor,w
  3337  0708  00A3               	movwf	LCD_Set_Cursor@Temp
  3338                           
  3339                           ;lcd.c: 81: High4 = Temp >> 4;
  3340  0709  0823               	movf	LCD_Set_Cursor@Temp,w
  3341  070A  00F7               	movwf	??_LCD_Set_Cursor
  3342  070B  3004               	movlw	4
  3343  070C                     u305:
  3344  070C  1003               	clrc
  3345  070D  0CF7               	rrf	??_LCD_Set_Cursor,f
  3346  070E  3EFF               	addlw	-1
  3347  070F  1D03               	skipz
  3348  0710  2F0C               	goto	u305
  3349  0711  0877               	movf	??_LCD_Set_Cursor,w
  3350  0712  00F8               	movwf	??_LCD_Set_Cursor+1
  3351  0713  0878               	movf	??_LCD_Set_Cursor+1,w
  3352  0714  00A2               	movwf	LCD_Set_Cursor@High4
  3353                           
  3354                           ;lcd.c: 82: Low4 = Temp & 0x0F;
  3355  0715  0823               	movf	LCD_Set_Cursor@Temp,w
  3356  0716  390F               	andlw	15
  3357  0717  00F7               	movwf	??_LCD_Set_Cursor
  3358  0718  0877               	movf	??_LCD_Set_Cursor,w
  3359  0719  00A1               	movwf	LCD_Set_Cursor@Low4
  3360                           
  3361                           ;lcd.c: 83: LCD_CMD(High4);
  3362  071A  0822               	movf	LCD_Set_Cursor@High4,w
  3363  071B  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3364                           
  3365                           ;lcd.c: 84: LCD_CMD(Low4);
  3366  0720  0821               	movf	LCD_Set_Cursor@Low4,w
  3367  0721  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3368  0726                     l1460:
  3369                           
  3370                           ;lcd.c: 85: };lcd.c: 86: if(r == 2)
  3371  0726  3002               	movlw	2
  3372  0727  0620               	xorwf	LCD_Set_Cursor@r,w
  3373  0728  1D03               	btfss	3,2
  3374  0729  0008               	return
  3375                           
  3376                           ;lcd.c: 87: {;lcd.c: 88: Temp = 0xC0 + c - 1;
  3377  072A  0876               	movf	LCD_Set_Cursor@c,w
  3378  072B  3EBF               	addlw	191
  3379  072C  00F7               	movwf	??_LCD_Set_Cursor
  3380  072D  0877               	movf	??_LCD_Set_Cursor,w
  3381  072E  00A3               	movwf	LCD_Set_Cursor@Temp
  3382                           
  3383                           ;lcd.c: 89: High4 = Temp >> 4;
  3384  072F  0823               	movf	LCD_Set_Cursor@Temp,w
  3385  0730  00F7               	movwf	??_LCD_Set_Cursor
  3386  0731  3004               	movlw	4
  3387  0732                     u325:
  3388  0732  1003               	clrc
  3389  0733  0CF7               	rrf	??_LCD_Set_Cursor,f
  3390  0734  3EFF               	addlw	-1
  3391  0735  1D03               	skipz
  3392  0736  2F32               	goto	u325
  3393  0737  0877               	movf	??_LCD_Set_Cursor,w
  3394  0738  00F8               	movwf	??_LCD_Set_Cursor+1
  3395  0739  0878               	movf	??_LCD_Set_Cursor+1,w
  3396  073A  00A2               	movwf	LCD_Set_Cursor@High4
  3397                           
  3398                           ;lcd.c: 90: Low4 = Temp & 0x0F;
  3399  073B  0823               	movf	LCD_Set_Cursor@Temp,w
  3400  073C  390F               	andlw	15
  3401  073D  00F7               	movwf	??_LCD_Set_Cursor
  3402  073E  0877               	movf	??_LCD_Set_Cursor,w
  3403  073F  00A1               	movwf	LCD_Set_Cursor@Low4
  3404                           
  3405                           ;lcd.c: 91: LCD_CMD(High4);
  3406  0740  0822               	movf	LCD_Set_Cursor@High4,w
  3407  0741  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3408                           
  3409                           ;lcd.c: 92: LCD_CMD(Low4);
  3410  0746  0821               	movf	LCD_Set_Cursor@Low4,w
  3411  0747  120A  118A  27E9   	fcall	_LCD_CMD
  3412  074A  0008               	return
  3413  074B                     __end_of_LCD_Set_Cursor:
  3414                           
  3415                           	psect	text14
  3416  0FA3                     __ptext14:	
  3417 ;; *************** function _LCD_SL *****************
  3418 ;; Defined at:
  3419 ;;		line 121 in file "lcd.c"
  3420 ;; Parameters:    Size  Location     Type
  3421 ;;		None
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg, status,2, status,0, pclath, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 0/0
  3430 ;;		On exit  : 300/0
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3433 ;;      Params:         0       0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0
  3435 ;;      Temps:          0       0       0       0       0
  3436 ;;      Totals:         0       0       0       0       0
  3437 ;;Total ram usage:        0 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    4
  3440 ;; This function calls:
  3441 ;;		_LCD_CMD
  3442 ;; This function is called by:
  3443 ;;		_screen_saver
  3444 ;;		_instruction_screen
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           
  3449                           ;psect for function _LCD_SL
  3450  0FA3                     _LCD_SL:
  3451                           
  3452                           ;lcd.c: 123: LCD_CMD(0x01);
  3453                           
  3454                           ;incstack = 0
  3455                           ; Regs used in _LCD_SL: [wreg+status,2+status,0+pclath+cstack]
  3456  0FA3  3001               	movlw	1
  3457  0FA4  120A  118A  27E9  120A  158A  	fcall	_LCD_CMD
  3458                           
  3459                           ;lcd.c: 124: LCD_CMD(0x08);
  3460  0FA9  3008               	movlw	8
  3461  0FAA  120A  118A  27E9   	fcall	_LCD_CMD
  3462  0FAD  0008               	return
  3463  0FAE                     __end_of_LCD_SL:
  3464                           
  3465                           	psect	text15
  3466  0F8D                     __ptext15:	
  3467 ;; *************** function _UART_Read *****************
  3468 ;; Defined at:
  3469 ;;		line 67 in file "uart.c"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      unsigned char 
  3476 ;; Registers used:
  3477 ;;		wreg
  3478 ;; Tracked objects:
  3479 ;;		On entry : 300/0
  3480 ;;		On exit  : 300/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3483 ;;      Params:         0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:    2
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           
  3498                           ;psect for function _UART_Read
  3499  0F8D                     _UART_Read:
  3500  0F8D                     l297:	
  3501                           ;uart.c: 69: while(!RCIF);
  3502                           
  3503                           ;incstack = 0
  3504                           ; Regs used in _UART_Read: [wreg]
  3505                           
  3506  0F8D  1E8C               	btfss	12,5	;volatile
  3507  0F8E  2F8D               	goto	l297
  3508                           
  3509                           ;uart.c: 70: return RCREG;
  3510  0F8F  081A               	movf	26,w	;volatile
  3511  0F90  0008               	return
  3512  0F91                     __end_of_UART_Read:
  3513                           
  3514                           	psect	text16
  3515  0FBA                     __ptext16:	
  3516 ;; *************** function _UART_RX_Init *****************
  3517 ;; Defined at:
  3518 ;;		line 32 in file "uart.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;		None
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;		None
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg
  3527 ;; Tracked objects:
  3528 ;;		On entry : 300/0
  3529 ;;		On exit  : 300/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3532 ;;      Params:         0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0
  3535 ;;      Totals:         0       0       0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used:    1
  3538 ;; Hardware stack levels required when called:    2
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_main
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           
  3547                           ;psect for function _UART_RX_Init
  3548  0FBA                     _UART_RX_Init:
  3549                           
  3550                           ;uart.c: 34: TXSTAbits.BRGH = 1;
  3551                           
  3552                           ;incstack = 0
  3553                           ; Regs used in _UART_RX_Init: [wreg]
  3554  0FBA  1683               	bsf	3,5	;RP0=1, select bank1
  3555  0FBB  1518               	bsf	24,2	;volatile
  3556                           
  3557                           ;uart.c: 35: SPBRG = 51;
  3558  0FBC  3033               	movlw	51
  3559  0FBD  0099               	movwf	25	;volatile
  3560                           
  3561                           ;uart.c: 38: TXSTAbits.SYNC = 0;
  3562  0FBE  1218               	bcf	24,4	;volatile
  3563                           
  3564                           ;uart.c: 39: RCSTAbits.SPEN = 1;
  3565  0FBF  1283               	bcf	3,5	;RP0=0, select bank0
  3566  0FC0  1798               	bsf	24,7	;volatile
  3567                           
  3568                           ;uart.c: 41: TRISCbits.TRISC6 = 1;
  3569  0FC1  1683               	bsf	3,5	;RP0=1, select bank1
  3570  0FC2  1707               	bsf	7,6	;volatile
  3571                           
  3572                           ;uart.c: 42: TRISCbits.TRISC7 = 1;
  3573  0FC3  1787               	bsf	7,7	;volatile
  3574                           
  3575                           ;uart.c: 44: PIE1bits.RCIE = 1;
  3576  0FC4  168C               	bsf	12,5	;volatile
  3577                           
  3578                           ;uart.c: 46: INTCONbits.PEIE = 1;
  3579  0FC5  170B               	bsf	11,6	;volatile
  3580                           
  3581                           ;uart.c: 47: INTCONbits.GIE = 1;
  3582  0FC6  178B               	bsf	11,7	;volatile
  3583                           
  3584                           ;uart.c: 50: RCSTAbits.CREN = 1;
  3585  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0FC8  1618               	bsf	24,4	;volatile
  3587  0FC9  0008               	return
  3588  0FCA                     __end_of_UART_RX_Init:
  3589                           
  3590                           	psect	text17
  3591  05AA                     __ptext17:	
  3592 ;; *************** function _LCD_Init *****************
  3593 ;; Defined at:
  3594 ;;		line 12 in file "lcd.c"
  3595 ;; Parameters:    Size  Location     Type
  3596 ;;		None
  3597 ;; Auto vars:     Size  Location     Type
  3598 ;;		None
  3599 ;; Return value:  Size  Location     Type
  3600 ;;                  1    wreg      void 
  3601 ;; Registers used:
  3602 ;;		wreg, status,2, status,0, pclath, cstack
  3603 ;; Tracked objects:
  3604 ;;		On entry : B00/0
  3605 ;;		On exit  : 300/0
  3606 ;;		Unchanged: 0/0
  3607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3608 ;;      Params:         0       0       0       0       0
  3609 ;;      Locals:         0       0       0       0       0
  3610 ;;      Temps:          2       0       0       0       0
  3611 ;;      Totals:         2       0       0       0       0
  3612 ;;Total ram usage:        2 bytes
  3613 ;; Hardware stack levels used:    1
  3614 ;; Hardware stack levels required when called:    5
  3615 ;; This function calls:
  3616 ;;		_LCD_CMD
  3617 ;;		_LCD_Clear
  3618 ;;		_LCD_DATA
  3619 ;; This function is called by:
  3620 ;;		_main
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _LCD_Init
  3626  05AA                     _LCD_Init:
  3627                           
  3628                           ;lcd.c: 15: TRISB = 0x00;
  3629                           
  3630                           ;incstack = 0
  3631                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3632  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3633  05AB  0186               	clrf	6	;volatile
  3634                           
  3635                           ;lcd.c: 16: TRISCbits.TRISC0 = 0;
  3636  05AC  1007               	bcf	7,0	;volatile
  3637                           
  3638                           ;lcd.c: 17: TRISCbits.TRISC2 = 0;
  3639  05AD  1107               	bcf	7,2	;volatile
  3640                           
  3641                           ;lcd.c: 19: LCD_DATA(0x00);
  3642  05AE  3000               	movlw	0
  3643  05AF  120A  118A  27CF  120A  118A  	fcall	_LCD_DATA
  3644                           
  3645                           ;lcd.c: 20: _delay((unsigned long)((30)*(8000000/4000.0)));
  3646  05B4  304E               	movlw	78
  3647  05B5  00F7               	movwf	??_LCD_Init+1
  3648  05B6  30EB               	movlw	235
  3649  05B7  00F6               	movwf	??_LCD_Init
  3650  05B8                     u727:
  3651  05B8  0BF6               	decfsz	??_LCD_Init,f
  3652  05B9  2DB8               	goto	u727
  3653  05BA  0BF7               	decfsz	??_LCD_Init+1,f
  3654  05BB  2DB8               	goto	u727
  3655                           
  3656                           ;lcd.c: 21: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3657  05BC  30C7               	movlw	199
  3658  05BD  00F6               	movwf	??_LCD_Init
  3659  05BE                     u737:
  3660  05BE  2DBF               	nop2
  3661  05BF  0BF6               	decfsz	??_LCD_Init,f
  3662  05C0  2DBE               	goto	u737
  3663  05C1  2DC2               	nop2
  3664  05C2  2DC3               	nop2
  3665                           
  3666                           ;lcd.c: 22: LCD_CMD(0x03);
  3667  05C3  3003               	movlw	3
  3668  05C4  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3669                           
  3670                           ;lcd.c: 23: _delay((unsigned long)((5)*(8000000/4000.0)));
  3671  05C9  300D               	movlw	13
  3672  05CA  00F7               	movwf	??_LCD_Init+1
  3673  05CB  30FB               	movlw	251
  3674  05CC  00F6               	movwf	??_LCD_Init
  3675  05CD                     u747:
  3676  05CD  0BF6               	decfsz	??_LCD_Init,f
  3677  05CE  2DCD               	goto	u747
  3678  05CF  0BF7               	decfsz	??_LCD_Init+1,f
  3679  05D0  2DCD               	goto	u747
  3680  05D1  2DD2               	nop2
  3681                           
  3682                           ;lcd.c: 24: LCD_CMD(0x03);
  3683  05D2  3003               	movlw	3
  3684  05D3  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3685                           
  3686                           ;lcd.c: 25: _delay((unsigned long)((150)*(8000000/4000000.0)));
  3687  05D8  3063               	movlw	99
  3688  05D9  00F6               	movwf	??_LCD_Init
  3689  05DA                     u757:
  3690  05DA  0BF6               	decfsz	??_LCD_Init,f
  3691  05DB  2DDA               	goto	u757
  3692  05DC  2DDD               	nop2
  3693                           
  3694                           ;lcd.c: 26: LCD_CMD(0x03);
  3695  05DD  3003               	movlw	3
  3696  05DE  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3697                           
  3698                           ;lcd.c: 27: LCD_CMD(0x02);
  3699  05E3  3002               	movlw	2
  3700  05E4  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3701                           
  3702                           ;lcd.c: 28: LCD_CMD(0x02);
  3703  05E9  3002               	movlw	2
  3704  05EA  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3705                           
  3706                           ;lcd.c: 29: LCD_CMD(0x08);
  3707  05EF  3008               	movlw	8
  3708  05F0  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3709                           
  3710                           ;lcd.c: 30: LCD_CMD(0x00);
  3711  05F5  3000               	movlw	0
  3712  05F6  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3713                           
  3714                           ;lcd.c: 31: LCD_CMD(0x0C);
  3715  05FB  300C               	movlw	12
  3716  05FC  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3717                           
  3718                           ;lcd.c: 32: LCD_CMD(0x00);
  3719  0601  3000               	movlw	0
  3720  0602  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3721                           
  3722                           ;lcd.c: 33: LCD_CMD(0x06);
  3723  0607  3006               	movlw	6
  3724  0608  120A  118A  27E9  120A  118A  	fcall	_LCD_CMD
  3725                           
  3726                           ;lcd.c: 34: LCD_Clear();
  3727  060D  120A  158A  2798   	fcall	_LCD_Clear
  3728  0610  0008               	return
  3729  0611                     __end_of_LCD_Init:
  3730                           
  3731                           	psect	text18
  3732  0F98                     __ptext18:	
  3733 ;; *************** function _LCD_Clear *****************
  3734 ;; Defined at:
  3735 ;;		line 69 in file "lcd.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 300/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    4
  3756 ;; This function calls:
  3757 ;;		_LCD_CMD
  3758 ;; This function is called by:
  3759 ;;		_splash_screen
  3760 ;;		_start_led_actions
  3761 ;;		_screen_saver
  3762 ;;		_instruction_screen
  3763 ;;		_LCD_Init
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           
  3768                           ;psect for function _LCD_Clear
  3769  0F98                     _LCD_Clear:
  3770                           
  3771                           ;lcd.c: 71: LCD_CMD(0);
  3772                           
  3773                           ;incstack = 0
  3774                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3775  0F98  3000               	movlw	0
  3776  0F99  120A  118A  27E9  120A  158A  	fcall	_LCD_CMD
  3777                           
  3778                           ;lcd.c: 72: LCD_CMD(1);
  3779  0F9E  3001               	movlw	1
  3780  0F9F  120A  118A  27E9   	fcall	_LCD_CMD
  3781  0FA2  0008               	return
  3782  0FA3                     __end_of_LCD_Clear:
  3783                           
  3784                           	psect	text19
  3785  07E9                     __ptext19:	
  3786 ;; *************** function _LCD_CMD *****************
  3787 ;; Defined at:
  3788 ;;		line 57 in file "lcd.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  CMD             1    wreg     unsigned char 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  CMD             1    5[COMMON] unsigned char 
  3793 ;; Return value:  Size  Location     Type
  3794 ;;                  1    wreg      void 
  3795 ;; Registers used:
  3796 ;;		wreg, status,2, status,0, pclath, cstack
  3797 ;; Tracked objects:
  3798 ;;		On entry : 0/0
  3799 ;;		On exit  : 300/0
  3800 ;;		Unchanged: 0/0
  3801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3802 ;;      Params:         0       0       0       0       0
  3803 ;;      Locals:         1       0       0       0       0
  3804 ;;      Temps:          1       0       0       0       0
  3805 ;;      Totals:         2       0       0       0       0
  3806 ;;Total ram usage:        2 bytes
  3807 ;; Hardware stack levels used:    1
  3808 ;; Hardware stack levels required when called:    3
  3809 ;; This function calls:
  3810 ;;		_LCD_DATA
  3811 ;; This function is called by:
  3812 ;;		_LCD_Init
  3813 ;;		_LCD_Clear
  3814 ;;		_LCD_Set_Cursor
  3815 ;;		_LCD_SL
  3816 ;;		_LCD_SR
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           
  3821                           ;psect for function _LCD_CMD
  3822  07E9                     _LCD_CMD:
  3823                           
  3824                           ;incstack = 0
  3825                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  3826                           ;LCD_CMD@CMD stored from wreg
  3827  07E9  00F5               	movwf	LCD_CMD@CMD
  3828                           
  3829                           ;lcd.c: 60: RC0 = 0;
  3830  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  3831  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  3832  07EC  1007               	bcf	7,0	;volatile
  3833                           
  3834                           ;lcd.c: 62: LCD_DATA(CMD);
  3835  07ED  0875               	movf	LCD_CMD@CMD,w
  3836  07EE  120A  118A  27CF  120A  118A  	fcall	_LCD_DATA
  3837                           
  3838                           ;lcd.c: 64: RC2 = 1;
  3839  07F3  1507               	bsf	7,2	;volatile
  3840                           
  3841                           ;lcd.c: 65: _delay((unsigned long)((500)*(8000000/4000000.0)));
  3842  07F4  30C7               	movlw	199
  3843  07F5  00F4               	movwf	??_LCD_CMD
  3844  07F6                     u767:
  3845  07F6  2FF7               	nop2
  3846  07F7  0BF4               	decfsz	??_LCD_CMD,f
  3847  07F8  2FF6               	goto	u767
  3848  07F9  2FFA               	nop2
  3849  07FA  2FFB               	nop2
  3850                           
  3851                           ;lcd.c: 66: RC2 = 0;
  3852  07FB  1283               	bcf	3,5	;RP0=0, select bank0
  3853  07FC  1303               	bcf	3,6	;RP1=0, select bank0
  3854  07FD  1107               	bcf	7,2	;volatile
  3855  07FE  0008               	return
  3856  07FF                     __end_of_LCD_CMD:
  3857                           
  3858                           	psect	text20
  3859  07CF                     __ptext20:	
  3860 ;; *************** function _LCD_DATA *****************
  3861 ;; Defined at:
  3862 ;;		line 37 in file "lcd.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  Data            1    wreg     unsigned char 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  Data            1    3[COMMON] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 300/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3876 ;;      Params:         0       0       0       0       0
  3877 ;;      Locals:         1       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0
  3879 ;;      Totals:         1       0       0       0       0
  3880 ;;Total ram usage:        1 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    2
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_LCD_Init
  3887 ;;		_LCD_CMD
  3888 ;;		_LCD_Write_Char
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           
  3893                           ;psect for function _LCD_DATA
  3894  07CF                     _LCD_DATA:
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in _LCD_DATA: [wreg]
  3898                           ;LCD_DATA@Data stored from wreg
  3899  07CF  00F3               	movwf	LCD_DATA@Data
  3900                           
  3901                           ;lcd.c: 39: if(Data & 1)
  3902  07D0  1C73               	btfss	LCD_DATA@Data,0
  3903  07D1  2FD6               	goto	l218
  3904                           
  3905                           ;lcd.c: 40: RB4 = 1;
  3906  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  3907  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  3908  07D4  1606               	bsf	6,4	;volatile
  3909  07D5  2FD9               	goto	l219
  3910  07D6                     l218:
  3911                           
  3912                           ;lcd.c: 41: else;lcd.c: 42: RB4 = 0;
  3913  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3914  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  3915  07D8  1206               	bcf	6,4	;volatile
  3916  07D9                     l219:
  3917                           
  3918                           ;lcd.c: 43: if(Data & 2)
  3919  07D9  1CF3               	btfss	LCD_DATA@Data,1
  3920  07DA  2FDD               	goto	l220
  3921                           
  3922                           ;lcd.c: 44: RB5 = 1;
  3923  07DB  1686               	bsf	6,5	;volatile
  3924  07DC  2FDE               	goto	l221
  3925  07DD                     l220:
  3926                           
  3927                           ;lcd.c: 45: else;lcd.c: 46: RB5 = 0;
  3928  07DD  1286               	bcf	6,5	;volatile
  3929  07DE                     l221:
  3930                           
  3931                           ;lcd.c: 47: if(Data & 4)
  3932  07DE  1D73               	btfss	LCD_DATA@Data,2
  3933  07DF  2FE2               	goto	l222
  3934                           
  3935                           ;lcd.c: 48: RB6 = 1;
  3936  07E0  1706               	bsf	6,6	;volatile
  3937  07E1  2FE3               	goto	l223
  3938  07E2                     l222:
  3939                           
  3940                           ;lcd.c: 49: else;lcd.c: 50: RB6 = 0;
  3941  07E2  1306               	bcf	6,6	;volatile
  3942  07E3                     l223:
  3943                           
  3944                           ;lcd.c: 51: if(Data & 8)
  3945  07E3  1DF3               	btfss	LCD_DATA@Data,3
  3946  07E4  2FE7               	goto	l224
  3947                           
  3948                           ;lcd.c: 52: RB7 = 1;
  3949  07E5  1786               	bsf	6,7	;volatile
  3950  07E6  0008               	return
  3951  07E7                     l224:
  3952                           
  3953                           ;lcd.c: 53: else;lcd.c: 54: RB7 = 0;
  3954  07E7  1386               	bcf	6,7	;volatile
  3955  07E8  0008               	return
  3956  07E9                     __end_of_LCD_DATA:
  3957                           
  3958                           	psect	text21
  3959  0FAE                     __ptext21:	
  3960 ;; *************** function _ISR *****************
  3961 ;; Defined at:
  3962 ;;		line 94 in file "main.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;		None
  3965 ;; Auto vars:     Size  Location     Type
  3966 ;;		None
  3967 ;; Return value:  Size  Location     Type
  3968 ;;                  1    wreg      void 
  3969 ;; Registers used:
  3970 ;;		wreg, status,2, status,0, pclath, cstack
  3971 ;; Tracked objects:
  3972 ;;		On entry : 0/0
  3973 ;;		On exit  : 300/0
  3974 ;;		Unchanged: 0/0
  3975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3976 ;;      Params:         0       0       0       0       0
  3977 ;;      Locals:         0       0       0       0       0
  3978 ;;      Temps:          2       0       0       0       0
  3979 ;;      Totals:         2       0       0       0       0
  3980 ;;Total ram usage:        2 bytes
  3981 ;; Hardware stack levels used:    1
  3982 ;; Hardware stack levels required when called:    1
  3983 ;; This function calls:
  3984 ;;		_Is_Data_Recieved
  3985 ;; This function is called by:
  3986 ;;		Interrupt level 1
  3987 ;; This function uses a non-reentrant model
  3988 ;;
  3989                           
  3990                           
  3991                           ;psect for function _ISR
  3992  0FAE                     _ISR:
  3993                           
  3994                           ;main.c: 97: if (Is_Data_Recieved() == 1)
  3995  0FAE  120A  158A  2791  120A  158A  	fcall	_Is_Data_Recieved
  3996  0FB3  0872               	movf	??_ISR+1,w
  3997  0FB4  008A               	movwf	10
  3998  0FB5  0E71               	swapf	??_ISR,w
  3999  0FB6  0083               	movwf	3
  4000  0FB7  0EFE               	swapf	126,f
  4001  0FB8  0E7E               	swapf	126,w
  4002  0FB9  0009               	retfie
  4003  0FBA                     __end_of_ISR:
  4004                           
  4005                           	psect	intentry
  4006  0004                     __pintentry:	
  4007                           ;incstack = 0
  4008                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  4009                           
  4010  0004                     interrupt_function:
  4011  007E                     saved_w	set	btemp
  4012  0004  00FE               	movwf	btemp
  4013  0005  0E03               	swapf	3,w
  4014  0006  00F1               	movwf	??_ISR
  4015  0007  080A               	movf	10,w
  4016  0008  00F2               	movwf	??_ISR+1
  4017  0009  120A  158A  2FAE   	ljmp	_ISR
  4018                           
  4019                           	psect	text22
  4020  0F91                     __ptext22:	
  4021 ;; *************** function _Is_Data_Recieved *****************
  4022 ;; Defined at:
  4023 ;;		line 95 in file "uart.c"
  4024 ;; Parameters:    Size  Location     Type
  4025 ;;		None
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  1    wreg      unsigned char 
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 300/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4037 ;;      Params:         0       0       0       0       0
  4038 ;;      Locals:         0       0       0       0       0
  4039 ;;      Temps:          1       0       0       0       0
  4040 ;;      Totals:         1       0       0       0       0
  4041 ;;Total ram usage:        1 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; This function calls:
  4044 ;;		Nothing
  4045 ;; This function is called by:
  4046 ;;		_ISR
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           
  4051                           ;psect for function _Is_Data_Recieved
  4052  0F91                     _Is_Data_Recieved:
  4053                           
  4054                           ;uart.c: 97: return PIR1bits.RCIF;
  4055                           
  4056                           ;incstack = 0
  4057                           ; Regs used in _Is_Data_Recieved: [wreg+status,2+status,0]
  4058  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4059  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4060  0F93  0E0C               	swapf	12,w	;volatile
  4061  0F94  00F0               	movwf	??_Is_Data_Recieved
  4062  0F95  0C70               	rrf	??_Is_Data_Recieved,w
  4063  0F96  3901               	andlw	1
  4064  0F97  0008               	return
  4065  0F98                     __end_of_Is_Data_Recieved:
  4066  007E                     btemp	set	126	;btemp
  4067  007E                     wtemp0	set	126
  4068                           
  4069                           	psect	config
  4070                           
  4071                           ;Config register CONFIG @ 0x2007
  4072                           ;	Oscillator Selection bits
  4073                           ;	FOSC = HS, HS oscillator
  4074                           ;	Watchdog Timer Enable bit
  4075                           ;	WDTE = OFF, WDT disabled
  4076                           ;	Power-up Timer Enable bit
  4077                           ;	PWRTE = ON, PWRT enabled
  4078                           ;	Brown-out Reset Enable bit
  4079                           ;	BOREN = ON, BOR enabled
  4080                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  4081                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  4082                           ;	Data EEPROM Memory Code Protection bit
  4083                           ;	CPD = OFF, Data EEPROM code protection off
  4084                           ;	Flash Program Memory Write Enable bits
  4085                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  4086                           ;	In-Circuit Debugger Mode bit
  4087                           ;	DEBUG = 0x1, unprogrammed default
  4088                           ;	Flash Program Memory Code Protection bit
  4089                           ;	CP = OFF, Code protection off
  4090  2007                     	org	8199
  4091  2007  3F72               	dw	16242

Data Sizes:
    Strings     284
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     16      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_Write_String@str	PTR unsigned char  size(2) Largest target is 38
		 -> STR_16(CODE[34]), STR_15(CODE[38]), STR_14(CODE[19]), STR_13(CODE[8]), 
		 -> STR_12(CODE[24]), STR_11(CODE[8]), STR_10(CODE[17]), STR_9(CODE[18]), 
		 -> STR_8(CODE[17]), STR_7(CODE[15]), STR_6(CODE[16]), STR_5(CODE[16]), 
		 -> STR_4(CODE[17]), STR_3(CODE[16]), STR_2(CODE[14]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _start_led_actions->_LCD_Write_String
    _splash_screen->_led_testing
    _led_testing->_led_on
    _start_led_actions2->_led_on
    _screen_saver->_LCD_Write_String
    _LCD_SR->_LCD_CMD
    _instruction_screen->_LCD_Write_String
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_DATA
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_SL->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_DATA

Critical Paths under _ISR in COMMON

    _ISR->_Is_Data_Recieved

Critical Paths under _main in BANK0

    _main->_screen_saver
    _start_led_actions->_LCD_Write_String
    _screen_saver->_LCD_Write_String
    _instruction_screen->_LCD_Write_String

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9578
                           _LCD_Init
                     _LCD_Set_Cursor
                       _UART_RX_Init
                          _UART_Read
                 _instruction_screen
                             _led_on
                       _screen_saver
                      _splash_screen
                  _start_led_actions
 ---------------------------------------------------------------------------------
 (1) _start_led_actions                                    3     3      0    2445
                                              5 BANK0      3     3      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (1) _splash_screen                                        3     3      0     220
                                              0 BANK0      3     3      0
                          _LCD_Clear
                        _led_testing
                            _new_led
 ---------------------------------------------------------------------------------
 (2) _new_led                                              1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _led_testing                                          3     3      0      88
                                              6 COMMON     3     3      0
                            _led_off
                             _led_on
                 _start_led_actions2
 ---------------------------------------------------------------------------------
 (3) _start_led_actions2                                   0     0      0      44
                            _led_off
                             _led_on
 ---------------------------------------------------------------------------------
 (2) _led_on                                               3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _led_off                                              1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _screen_saver                                        11    11      0    2805
                                              5 BANK0     11    11      0
                          _LCD_Clear
                             _LCD_SL
                             _LCD_SR
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_SR                                               0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _instruction_screen                                   7     7      0    2603
                                              5 BANK0      7     7      0
                          _LCD_Clear
                             _LCD_SL
                     _LCD_Set_Cursor
                   _LCD_Write_String
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     7     5      2    1116
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       4     4      0     178
                                              4 COMMON     4     4      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       7     6      1    1175
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_SL                                               0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_RX_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     308
                                              6 COMMON     2     2      0
                            _LCD_CMD
                          _LCD_Clear
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0     110
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              2     2      0     110
                                              4 COMMON     2     2      0
                           _LCD_DATA
 ---------------------------------------------------------------------------------
 (4) _LCD_DATA                                             1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  2     2      0       0
                                              1 COMMON     2     2      0
                   _Is_Data_Recieved
 ---------------------------------------------------------------------------------
 (6) _Is_Data_Recieved                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_CMD
       _LCD_DATA
     _LCD_Clear
       _LCD_CMD
         _LCD_DATA
     _LCD_DATA
   _LCD_Set_Cursor
     _LCD_CMD
       _LCD_DATA
   _UART_RX_Init
   _UART_Read
   _instruction_screen
     _LCD_Clear
       _LCD_CMD
         _LCD_DATA
     _LCD_SL
       _LCD_CMD
         _LCD_DATA
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA
   _led_on
   _screen_saver
     _LCD_Clear
       _LCD_CMD
         _LCD_DATA
     _LCD_SL
       _LCD_CMD
         _LCD_DATA
     _LCD_SR
       _LCD_CMD
         _LCD_DATA
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA
   _splash_screen
     _LCD_Clear
       _LCD_CMD
         _LCD_DATA
     _led_testing
       _led_off
       _led_on
       _start_led_actions2
         _led_off
         _led_on
     _new_led
   _start_led_actions
     _LCD_Clear
       _LCD_CMD
         _LCD_DATA
     _LCD_Set_Cursor
       _LCD_CMD
         _LCD_DATA
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_DATA
     _led_off
     _led_on

 _ISR (ROOT)
   _Is_Data_Recieved

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      11       5       21.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Jun 09 10:26:13 2022

                          pc 0002                           l80 0268                           l96 0664  
                         fsr 0004                _splash_screen 0FCA                          l220 07DD  
                        l221 07DE                          l222 07E2                          l150 0667  
                        l223 07E3                          l224 07E7                          l152 066F  
                        l160 06B3                          l153 0675                          l218 07D6  
                        l170 06D9                          l154 067B                          l219 07D9  
                        l171 06DD                          l155 0681                          l180 02AC  
                        l172 06E1                          l156 0687                          l181 02B0  
                        l157 068D                          l182 02B4                          l166 06C9  
                        l174 06FF                          l158 0693                          l183 02B8  
                        l167 06CD                          l184 02BC                          l168 06D1  
                        l185 02C0                          l169 06D5                          l186 02C4  
                        l178 02A8                          l188 02E2                          l297 0F8D  
                        _RA0 0028                          _RB0 0030                          _RB1 0031  
                        _RA4 002C                          _RC0 0038                          _RA5 002D  
                        _RD0 0040                          _RB4 0034                          _RC2 003A  
                        _RC3 003B                          _RB5 0035                          _RE0 0048  
                        _RB6 0036                          _RB7 0037                          u305 070C  
                        u234 06C1                          u235 06BF                          u325 0732  
                        u405 04ED                          u415 0560                          u425 05A7  
                        u507 0069                          _ISR 0FAE                          u285 075A  
                        u517 007F                          u607 046C                          u375 0459  
                        u527 0095                          u617 04B2                          u385 0484  
                        u537 00AB                          u457 016F                          u707 0780  
                        u627 04D8                          u395 04C7                          u547 00C1  
                        u467 0FF0                          u717 078A                          u637 050E  
                        u557 00D7                          u477 0027                          u727 05B8  
                        u647 0532                          u567 00ED                          u487 003D  
                        u737 05BE                          u657 0549                          u577 0118  
                        u497 0053                          u747 05CD                          u667 0578  
                        u587 0142                          u757 05DA                          u677 0590  
                        u597 0441                          u767 07F6                          u687 0768  
                        u697 0772                 ?_led_testing 0070                          fsr0 0004  
                        indf 0000              __end_of_LCD_CMD 07FF                         ?_ISR 0070  
             _LCD_Set_Cursor 0700                         l1400 0626                         l1410 063F  
                       l1402 062B                         l1404 0630                         l1406 0635  
                       l1414 0644                         l1408 063A                         l1460 0726  
                       l1372 06E5                         l1544 0792                         l1368 06B6  
                       l1392 0612                         l1720 021A                         l1624 014B  
                       l1378 02C8                         l1394 0617                         l1396 061C  
                       l1732 0231                         l1708 0203                         l1660 01A7  
                       l1636 0179                         l1806 04CD                         l1398 0621  
                       l1478 0699                         l1672 01BE                         l1648 0190  
                       l1834 053C                         l1746 0248                         l1772 045F  
                       l1684 01D5          LCD_Write_String@str 0078                         l1854 0583  
                       l1758 0434                         l1870 0288                         l1792 04A7  
                       l1696 01EC                         l1864 027B                         l1874 0296  
                       STR_1 03F7                         STR_2 0406                         STR_3 03D8  
                       STR_4 03A7                         STR_5 03C8                         STR_6 03B8  
                       STR_7 03E8                         STR_8 0396                         STR_9 0373  
                       _RCIF 0065            ?_LCD_Write_String 0078                         _main 0269  
         __size_of_LCD_Clear 000B                         btemp 007E                         start 000C  
         ??_LCD_Write_String 0020                        ??_ISR 0071             __end_of_LCD_DATA 07E9  
             ?_splash_screen 0070             __end_of_LCD_Init 0611                        ?_main 0070  
                      STR_10 0385                        STR_11 0414                        STR_12 0348  
                      STR_13 0414                        STR_14 0360                        STR_15 0300  
                      STR_16 0326                        _RCREG 001A                        _SPBRG 0099  
                      _PORTA 0005                        _TRISB 0086       __end_of_LCD_Set_Cursor 074B  
         __size_of_UART_Read 0004              __end_of_led_off 02E3              __end_of_new_led 06B4  
                      pclath 000A                        status 0003                        wtemp0 007E  
         _start_led_actions2 0611               _LCD_Write_Char 074B              __initialization 000F  
               __end_of_main 02A6          ?_start_led_actions2 0070                       ??_main 007A  
          __end_of_LCD_Clear 0FA3                    ??_LCD_CMD 0074              ?_LCD_Set_Cursor 0076  
   __end_of_Is_Data_Recieved 0F98                       _ADCON1 009F         ??_start_led_actions2 0076  
                     _LCD_SL 0FA3                       _LCD_SR 02F5       __end_of_LCD_Write_Char 0790  
          __end_of_UART_Read 0F91              ??_splash_screen 0020                       _led_on 06B4  
                  ??_led_off 0073                    ??_new_led 0073                       saved_w 007E  
       __size_of_led_testing 0132              LCD_Set_Cursor@c 0076              LCD_Set_Cursor@r 0020  
                  ?_LCD_DATA 0070      __end_of__initialization 0014                    ?_LCD_Init 0070  
 __end_of_instruction_screen 05AA              ?_LCD_Write_Char 0070               __pcstackCOMMON 0070  
               __pidataBANK0 07FF                      ?_LCD_SL 0070                      ?_LCD_SR 0070  
                 ??_LCD_DATA 0073                   ??_LCD_Init 0076                   __pmaintext 0269  
                 __pintentry 0004                      ?_led_on 0070    __size_of_LCD_Write_String 003F  
                    _LCD_CMD 07E9                ?_screen_saver 0070                ?_UART_RX_Init 0070  
                 __stringtab 02E3              __size_of_LCD_SL 000B              __size_of_LCD_SR 000B  
            __size_of_led_on 004C             ??_LCD_Set_Cursor 0077                      __ptext1 014A  
                    __ptext2 0FCA                      __ptext3 0665                      __ptext4 0018  
                    __ptext5 0611                      __ptext6 06B4                      __ptext7 02A6  
                    __ptext8 041C                      __ptext9 02F5                      _led_off 02A6  
               __size_of_ISR 000C               ??_screen_saver 0025                      _new_led 0665  
                  _LCD_Clear 0F98               ??_UART_RX_Init 0073            ?_Is_Data_Recieved 0070  
       end_of_initialization 0014           ??_Is_Data_Recieved 0070                    _RCSTAbits 0018  
               __pstringtext 0300          instruction_screen@i 0028                    _UART_Read 0F8D  
                  _PORTEbits 0009                   LCD_CMD@CMD 0075                    _TRISAbits 0085  
                  _TRISBbits 0086                    _TRISCbits 0087                    _TRISDbits 0088  
                  _TRISEbits 0089                   ?_LCD_Clear 0070  __size_of_start_led_actions2 0054  
          LCD_Write_String@i 0023             ??_LCD_Write_Char 0074                   _start_once 0030  
             __end_of_LCD_SL 0FAE               __end_of_LCD_SR 0300                    _TXSTAbits 0098  
          __size_of_LCD_DATA 001A            __size_of_LCD_Init 0067        __end_of_splash_screen 1000  
           _LCD_Write_String 0790                   ?_UART_Read 0070           _instruction_screen 04F0  
             __end_of_led_on 0700                ??_led_testing 0076            screen_saver@i_140 002E  
          screen_saver@i_136 002A            screen_saver@i_139 002C          start_initialization 000F  
          _start_led_actions 014A          ?_instruction_screen 0070                  __end_of_ISR 0FBA  
         ?_start_led_actions 0070                     ??_LCD_SL 0076                     ??_LCD_SR 0076  
        ??_start_led_actions 0025         __end_of_screen_saver 04F0         ??_instruction_screen 0025  
              screen_saver@i 0028         __end_of_UART_RX_Init 0FCA                     ??_led_on 0073  
                __pdataBANK0 0030    __end_of_start_led_actions 0269                     ?_LCD_CMD 0070  
                __pbssCOMMON 007A                    ___latbits 0002                __pcstackBANK0 0020  
                ??_LCD_Clear 0076                 _RecievedData 007A          __end_of_led_testing 014A  
          led_off@pin_number 0073                  ??_UART_Read 0073                    __pstrings 02E3  
    instruction_screen@i_146 002A                     ?_led_off 0070                     ?_new_led 0070  
                   _LCD_DATA 07CF            interrupt_function 0004                     _LCD_Init 05AA  
                   _PIE1bits 008C            new_led@pin_number 0073                     _PIR1bits 000C  
  __size_of_Is_Data_Recieved 0007                  __stringbase 02F5   __size_of_start_led_actions 011F  
                _led_testing 0018             __size_of_LCD_CMD 0016     __end_of_LCD_Write_String 07CF  
      __size_of_screen_saver 00D4        __size_of_UART_RX_Init 0010          LCD_Write_Char@High4 0076  
         __end_of__stringtab 02F5             __size_of_led_off 003D             led_on@pin_number 0075  
               _screen_saver 041C   __end_of_start_led_actions2 0665             __size_of_new_led 004F  
                   __ptext10 04F0                     __ptext11 0790                     __ptext20 07CF  
                   __ptext12 074B                     __ptext21 0FAE                     __ptext13 0700  
                   __ptext22 0F91                     __ptext14 0FA3                     __ptext15 0F8D  
                   __ptext16 0FBA                     __ptext17 05AA                     __ptext18 0F98  
                   __ptext19 07E9                 _UART_RX_Init 0FBA      __size_of_LCD_Set_Cursor 004B  
              __size_of_main 003D          LCD_Set_Cursor@High4 0022                   _INTCONbits 000B  
         LCD_Write_Char@Data 0077           LCD_Write_Char@Low4 0075                     intlevel1 0000  
     __size_of_splash_screen 0036                    stringcode 02ED  __size_of_instruction_screen 00BA  
    __size_of_LCD_Write_Char 0045             _Is_Data_Recieved 0F91           LCD_Set_Cursor@Low4 0021  
         LCD_Set_Cursor@Temp 0023                 LCD_DATA@Data 0073                     stringtab 02E3  
